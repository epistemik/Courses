

CSI 2131 ASSIGNMENT #3




  
  
    CSI 2131 
      ASSIGNMENT #3

  
  
    MARKS:
    8
  
    DUE&NBSP;TIME:
    FRIDAY, MARCH 17, 2000, 12:00PM (NOON!)... NO LATE ASSIGNMENTS 
      ACCEPTED
  
    DUE&NBSP;PLACE:
    LOCKED BOX FOR CSI2131A OR CSI2131B (DEPENDING ON THE COURSE 
      SECTION YOU'RE REGISTERED IN), 3RD FLOOR MCD
N.B. READ THE ASSIGNMENT 
STANDARDS VERY CAREFULLY. YOU WILL LOSE MARKS IF YOU DON'T FOLLOW THOSE 
INSTRUCTIONS.




THE STORYOK. HERE'S THE STORY. I'M SICK AND TIRED OF WAITING 10 MINUTES 
TO LOAD SOME WEB PAGE BECAUSE THE AUTHOR HAS STUCK IN A BUNCH OF FANCY 
FORMATTING JUNK THAT I DON'T CARE ABOUT. ALL I WANT IS THE PLAIN TEXT: NO 
PICTURES, NO COLOURS, NO BOLD, NO ITALICS, NO FLASHING, NO TABLES, NO LOWER CASE 
CHARACTERS, ETC.

THE ASSIGNMENTYOUR JOB IS TO WRITE A COMPRESSOR-REDUCER-ARCHIVER 
PROGRAM (CRAP FOR SHORT). THE PROGRAM (TO BE WRITTEN IN C, AND CALLED 
CRAP.C) DOES THREE IMPORTANT THINGS:

  IT DOES LOSSY COMPRESSION ON HTML FILES BY
  
    IGNORING HTML TAGS (STUFF BETWEEN ANGLE BRACKETS &LT; &GT;) AND 
    REDUCING THE REMAINING ASCII CHARACTERS TO 6 BITS INSTEAD OF 8 
  IT DOES LOSSLESS COMPRESSION BY
  
    USING THE EXTRA TWO BITS TO BUILD AN 8-BIT LEMPEL-ZIV-WELCH DICTIONARY 
    
  IT DOES ARCHIVING BY
  
    TAKING ANY NUMBER OF FILE NAMES ON THE COMMAND LINE AND STORING THE 
    COMPRESSED/REDUCED VERSIONS IN ONE BINARY FILE (THE FIRST FILE NAME ON THE 
    COMMAND LINE) 
YOU MUST ALSO WRITE THE PROGRAM UNCRAP.C THAT READS IN A CRAPFILE 
PRODUCED BY THE CRAP PROGRAM AND DECODES EACH OF THE 
ARCHIVED/COMPRESSED/REDUCED FILES.
HERE'S HOW THE CRAP PROGRAM WORKS:


  
  
    MAKE A LZW DICTIONARY AS A 256-ELEMENT ARRAY OF 32-BYTE STRINGS 
INITIALIZE THE FIRST 64 ENTRIES TO UPPER CASE LETTERS AND PUNCTUATION (SEE BELOW)

OPEN THE FIRST FILE OUTF FROM THE COMMAND LINE FOR BINARY WRITING

FOR EACH FILE INF SPECIFIED ON THE COMMAND LINE
   OPEN INF FOR ASCII READING
   WRITE THE NULL BYTE (0) TO OUTF
   WRITE INF'S NAME TO OUTF
   WRITE ANOTHER NULL BYTE TO OUTF

   SET W TO THE EMPTY STRING
   SET WCODE TO 0

   WHILE THERE ARE CHARACTERS LEFT IN INF
      READ A CHARACTER INK FROM INF
      IF INK IS '&LT;'
         SKIP ALL CHARACTERS UP TO AND INCLUDING THE NEXT '&GT;'
      ELSE
         REDUCE INK TO K (SEE BELOW)
         COPY W INTO WK
         STICK K ON THE END OF WK

         IF WK IS IN THE LZW DICTIONARY AT POSITION KPOS
            STICK K ON THE END OF W
            SET WCODE TO KPOS
         ELSE
            WRITE WCODE TO OUTF

            IF THE DICTIONARY IS NOT FULL AND WK IS NOT TOO BIG
               ADD WK TO THE DICTIONARY
            ENDIF

            SET W TO K
            SET WCODE TO K'S POSITION IN THE DICTIONARY
         ENDIF
      ENDIF
   ENDWHILE

   WRITE WCODE TO OUTF

   CLOSE INF
ENDFOR

CLOSE OUTF

HERE'S HOW THE UNCRAP PROGRAM WORKS:


  
  
    MAKE A LZW DICTIONARY AS A 256-ELEMENT ARRAY OF 32-BYTE STRINGS 
INITIALIZE THE FIRST 64 ENTRIES TO UPPER CASE LETTERS AND PUNCTUATION (SEE BELOW)

READ THE NAME OF THE CRAPFILE FROM THE COMMAND LINE
OPEN THE CRAPFILE FOR BINARY READING

READ THE FIRST CODE K FROM THE CRAPFILE (IT SHOULD BE NULL)

WHILE K IS NOT EOF
   IF K IS NULL
      IF OUTF IS ALREADY OPEN
         CLOSE OUTF
      ENDIF

      READ THE FILE NAME FN FROM CRAPFILE (ALL CHARACTERS UP TO THE NEXT NULL)
      OPEN OUTF (WHOSE NAME IS FN) FOR ASCII WRITING

      READ A CODE K FROM THE CRAPFILE
      WRITE THE DICTIONARY STRING DICT[K] TO OUTF
      SET W TO THE DICTIONARY STRING DICT[K]

      READ A CODE K FROM THE CRAPFILE
   ENDIF

   IF K IS IN THE DICTIONARY
      WRITE THE DICTIONARY STRING DICT[K] TO OUTF

      COPY W INTO WK
      STICK THE FIRST CHARACTER OF THE STRING DICT[K] ON THE END OF WK
   ELSE
      COPY W INTO WK
      STICK THE FIRST CHARACTER OF W ON THE END OF WK
      WRITE WK TO OUTF
   ENDIF

   IF THE DICTIONARY IS NOT FULL AND WK IS NOT TOO BIG
      ADD WK TO THE DICTIONARY
   ENDIF

   SET W TO THE STRING DICT[K]

   READ A CODE K FROM THE CRAPFILE
ENDWHILE

CLOSE OUTF
CLOSE THE CRAPFILE


THE HINTS

  USE AN ARRAY OF STRINGS FOR THE DICTIONARY. HERE'S AN EXAMPLE:
  &NBSP;&NBSP;&NBSP;UNSIGNED CHAR DICT[256][32];
  THAT'S AN ARRAY OF 256 STRINGS, WITH EACH STRING HAVING A MAXIMUM OF 31 
  CHARACTERS (THERE MUST BE A NULL BYTE AFTER THE LAST CHARACTER). THAT MEANS 
  THAT YOUR PROGRAM MUST BE CAREFUL NOT TO ADD TO THE DICTIONARY ONCE IT IS FULL 
  AND NOT TO ADD STRINGS TO THE DICTIONARY THAT ARE TOO LONG. THE 8-BIT CODE FOR 
  EACH ENTRY IN THE DICTIONARY IS SIMPLY ITS POSITION IN THE ARRAY. FOR EXAMPLE, 
  THE CODE FOR THE ENTRY DICT[200] IS 200.
  
  STRINGS IN C ARE ARRAYS OF CHARACTERS. EACH ELEMENT IN THE ARRAY CONTAINS 
  ONE CHARACTER IN THE STRING. YOU MUST PUT A NULL (0) BYTE AFTER THE LAST 
  CHARACTER IN YOUR STRING. THAT MEANS THAT IF YOU USE AN ARRAY OF 32 CHARS FOR 
  YOUR STRING (CHAR MYSTRING[32]) IT CAN HOLD 31 CHARACTERS, PLUS THE 
  NULL BYTE AT THE END. YOU CAN USE YOUR 32-ELEMENT ARRAY FOR STRINGS SMALLER 
  THAN 31 CHARACTERS BY PLACING A NULL BYTE AFTER THE LAST CHARACTER IN THE 
  STRING. FOR EXAMPLE, THE STRING "FOO" COULD BE STORED IN 
  MYSTRING AS FOLLOWS:
  
    MYSTRING[0] = 'F';MYSTRING[1] = 'O';MYSTRING[2] = 
    'O';MYSTRING[3] = 0; 
  
  C HAS SEVERAL LIBRARY FUNCTIONS FOR DEALING WITH STRINGS. HERE ARE SOME 
  EXAMPLES:
  CHAR MYSTR1[32], MYSTR2[32] = "FOO";
INT CMPVAL, LEN;

STRCPY(MYSTR1, MYSTR2);             /* COPIES MYSTR2 INTO MYSTR1 */
MYSTR1[0] = 'G';                    /* MYSTR1 IS NOW "GOO"       */
LEN = STRLEN(MYSTR1);               /* LENGTH OF MYSTR1 (= 3)    */
MYSTR1[3] = 'F';
MYSTR1[4] = 0;                      /* MYSTR1 IS NOW "GOOF"      */

CMPVAL = STRCMP(MYSTR1, MYSTR2);    /* COMPARE MYSTR1 AND MYSTR2 */
IF(CMPVAL == 0)
   PRINTF("MYSTR1 AND MYSTR2 ARE THE SAME!\N");
IF(CMPVAL &LT; 0)
   PRINTF("MYSTR1 IS LESS THAN MYSTR2!\N");
IF(CMPVAL &GT; 0)
   PRINTF("MYSTR1 IS GREATER THAN MYSTR2!\N");
  
  HERE'S HOW TO DECLARE YOUR DICTIONARY AND INITIALIZE THE FIRST 64 ENTRIES 
  (ENTRY NUMBER 0 TO ENTRY NUMBER 63):
  UNSIGNED CHAR DICT[256][32] =  
  "\0", "\N", " ", "!", "\"", "#", "$", "%", 
  "&AMP;", "\'", "*", "+", ",", "-", ".", "/",
  "0", "1", "2", "3", "4", "5", "6", "7",
  "8", "9", ":", ";", "(", "=", ")", "?",
  "A", "B", "C", "D", "E", "F", "G", "H",
  "I", "J", "K", "L", "M", "N", "O", "P",
  "Q", "R", "S", "T", "U", "V", "W", "X",
  "Y", "Z", "[", "]", "\\", "^", "@", "_" 
 ;
  
  HERE'S HOW TO REDUCE THE 8-BIT ASCII CHARACTERS:
  
    IF THE CHARACTER IS A LOWER-CASE LETTER (&GT;= 'A' AND &LT;= 'Z'), USE 
    THE UPPER-CASE EQUIVALENT (K = INK - 32;) 
    IF THE CHARACTER IS ONE OF THE CHARACTERS IN THE FIRST 64 ELEMENTS IN 
    THE DICTIONARY, LEAVE IT AS IT IS (K = INK;) 
    IF THE CHARACTER IS NOT IN THE FIRST 64 ELEMENTS IN THE DICTIONARY, USE 
    A SPACE CHARACTER (K = ' ';) DON'T WORRY ABOUT TREATING 
  SPECIAL CHARACTERS (LIKE THE CARRIAGE RETURN OR LINE FEED). IF YOU IMPLEMENT 
  THE ALGORITHMS CORRECTLY, EVERYTHING SHOULD WORK OUT FINE.
  
  BE CAREFUL TESTING YOUR PROGRAMS. YOUR UNCRAP PROGRAM WILL WIPE 
  OUT THE ORIGINAL VERSIONS OF THE FILES YOU CRAPPED (USING YOUR CRAP 
  PROGRAM). IT'S PROBABLY SAFEST TO MAKE COPIES OF ALL YOUR FILES AND TESTING 
  THE PROGRAMS IN A SEPARATE DIRECTORY.
  
  RUN YOUR CRAP PROGRAM ON ASCII FILES ONLY! DO NOT TRY TO RUN IT 
  ON BINARY FILES, IT WON'T WORK!
  
THE SAMPLE OUTPUTHERE'S WHAT HAPPENS WHEN I RUN MY PROGRAMS 
CRAP AND UNCRAP IN DOS:


  
  
    C:\TEACH\2131\WORK\ASS3&GT;DIR
 VOLUME IN DRIVE C HAS NO LABEL.
 VOLUME SERIAL NUMBER IS 8E36-5ED8

 DIRECTORY OF C:\TEACH\2131\WORK\ASS3

03/02/00  06:00A        &LT;DIR&GT;          .
03/02/00  06:00A        &LT;DIR&GT;          ..
03/03/00  05:26A                 2,506 CRAP.C
03/03/00  05:30A                 2,071 UNCRAP.C
03/03/00  05:29A                57,338 CRAP.EXE
03/03/00  05:30A                56,944 UNCRAP.EXE
03/03/00  05:27A                   179 FILE1.HTM
03/03/00  05:27A                   157 FILE2.HTM
03/03/00  05:27A                   137 FILE3.HTM
               9 FILE(S)        119,332 BYTES
                            610,861,056 BYTES FREE

C:\TEACH\2131\WORK\ASS3&GT;TYPE FILE1.HTM
&LT;HTML&GT;
&LT;HEAD&GT;
&LT;TITLE&GT;A PRETTY SHORT HTML DOCUMENT&LT;/TITLE&GT;
&LT;/HEAD&GT;
&LT;BODY BGCOLOR=#FFE0E0&GT;
HERE IS A &LT;B&GT;&LT;I&GT;PRETTY SHORT&LT;/I&GT;&LT;/B&GT;&LT;BR&GT;
HTML DOCUMENT.&LT;P&GT;
&LT;HR&GT;
&LT;/BODY&GT;
&LT;/HTML&GT;

C:\TEACH\2131\WORK\ASS3&GT;TYPE FILE2.HTM
&LT;HTML&GT;
&LT;HEAD&GT;
&LT;TITLE&GT;ANOTHER PRETTY SHORT HTML DOCUMENT&LT;/TITLE&GT;
&LT;/HEAD&GT;
&LT;BODY&GT;
HERE IS ANOTHER &LT;I&GT;FAIRLY SHORT&LT;/I&GT; HTML DOCUMENT.&LT;P&GT;
&LT;/BODY&GT;
&LT;/HTML&GT;

C:\TEACH\2131\WORK\ASS3&GT;TYPE FILE3.HTM
&LT;HTML&GT;
&LT;HEAD&GT;
&LT;TITLE&GT;THE SHORTEST HTML DOCUMENT&LT;/TITLE&GT;
&LT;/HEAD&GT;
&LT;BODY&GT;
&LT;FONT SIZE=-1&GT;SHORT, SHORT, SHORT!&LT;/FONT&GT;
&LT;/BODY&GT;
&LT;/HTML&GT;

C:\TEACH\2131\WORK\ASS3&GT;CRAP 3FILES.CRP FILE1.HTM FILE2.HTM FILE3.HTM   

C:\TEACH\2131\WORK\ASS3&GT;DIR
 VOLUME IN DRIVE C HAS NO LABEL.
 VOLUME SERIAL NUMBER IS 8E36-5ED8

 DIRECTORY OF C:\TEACH\2131\WORK\ASS3

03/02/00  06:05A        &LT;DIR&GT;          .
03/02/00  06:05A        &LT;DIR&GT;          ..
03/03/00  05:26A                 2,506 CRAP.C
03/03/00  05:30A                 2,071 UNCRAP.C
03/03/00  05:29A                57,338 CRAP.EXE
03/03/00  05:30A                56,944 UNCRAP.EXE
03/03/00  05:27A                   179 FILE1.HTM
03/03/00  05:27A                   157 FILE2.HTM
03/03/00  05:27A                   137 FILE3.HTM
03/03/00  05:39A                   155 3FILES.CRP
              10 FILE(S)        119,487 BYTES
                            610,828,288 BYTES FREE

C:\TEACH\2131\WORK\ASS3&GT;UNCRAP 3FILES.CRP

C:\TEACH\2131\WORK\ASS3&GT;DIR
 VOLUME IN DRIVE C HAS NO LABEL.
 VOLUME SERIAL NUMBER IS 8E36-5ED8

 DIRECTORY OF C:\TEACH\2131\WORK\ASS3

03/02/00  06:05A        &LT;DIR&GT;          .
03/02/00  06:05A        &LT;DIR&GT;          ..
03/03/00  05:26A                 2,506 CRAP.C
03/03/00  05:30A                 2,071 UNCRAP.C
03/03/00  05:29A                57,338 CRAP.EXE
03/03/00  05:30A                56,944 UNCRAP.EXE
03/03/00  05:39A                    84 FILE1.HTM
03/03/00  05:39A                    93 FILE2.HTM
03/03/00  05:39A                    62 FILE3.HTM
03/03/00  05:39A                   155 3FILES.CRP
              10 FILE(S)        119,253 BYTES
                            610,828,288 BYTES FREE

C:\TEACH\2131\WORK\ASS3&GT;TYPE FILE1.HTM


A PRETTY SHORT HTML DOCUMENT


HERE IS A PRETTY SHORT
HTML DOCUMENT.




C:\TEACH\2131\WORK\ASS3&GT;TYPE FILE2.HTM


ANOTHER PRETTY SHORT HTML DOCUMENT


HERE IS ANOTHER FAIRLY SHORT HTML DOCUMENT.



C:\TEACH\2131\WORK\ASS3&GT;TYPE FILE3.HTM


THE SHORTEST HTML DOCUMENT


SHORT, SHORT, SHORT!



C:\TEACH\2131\WORK\ASS3&GT;



LOOK AT THE 
SOLUTION TO THIS ASSIGNMENT.


  
  
    &NBSP;(LAST UPDATE MARCH 03, 2000) 
