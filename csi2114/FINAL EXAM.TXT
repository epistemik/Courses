Hi Folks,  The final exam is Saturday, July 24th from 9 to 12 in the morning.  It is a closed-book exam. Section C is in 202 MNT, section D is in 203 MNT.  Below is a list of topics and resources that the exam will cover. Section numbers refer to the book by Standish unless otherwise noted. 1. Fundamentals --------------- a. Linked Representations (chapter 2 - mostly review) b. Recursion - 3.1 to 3.3 - Tower of Hanoi(3.4 - skip the details of the analysis, but you should be able to figure out a call tree from the code.) Remember there is also a Tower of Hanoi demo on the lecture outlines page. c. Modularity, unit files, ADT's, etc. - 4.1 to 4.3  - 4.5 to 4.6 (Just the general arguments in this section. Don't worry about the details of the examples they use.) d. Big-O notation - 6.1 to 6.3 2. Trees -------- a. Basics - 9.1 to 9.3 b. Sequential representation and heaps - 9.4 to 9.5 (skip section called "A few mathematical facts about heaps") c. Binary tree traversal - 9.6 d. Binary Search Trees - 9.7 (Skip the section on "Analyzing performance characteristics". You just need to know the big-O results for the various operations.) - demo on the lecture outlines page e. AVL Trees - 9.8 (skip the "Analysis of performance") - sections 9.3 and 9.4 of the alternative course notes (links on the lecture outlines page) - demo on the lecture outlines page f. 2-3 Trees - 9.9 - insertion and deletion algorithms covered in class - demo on the lecture page doens't work well. try the one in the student contributors section instead.	3. Graphs	--------- a. Basic concepts and representation - 10.1 to 10.3 - see also type definitions given in class b. Graph searching - 10.4 - demo on the lecture outlines page c. Shortest path algorithm (Dijkstra) - 10.6 - demo on the lecture outlines page d. Minimal Spanning Tree algorithm (Prim) - p.439 to 441 - program strategy given in class - demo on the lecture outlines page 4. Tables and Hashing -------------------- a. The table ADT - 11.2 b. Hashing, collision resolution, analysis - 11.3 to 11.6 (skip all sections marked with ** in the book.) - section A.5 explains modular arithmetic if you need it explained. c. Comparison of Table implementations - 11.7 5. Sorting ---------- a. Priority Queue Sorting - 13.3 (emphasis on Heap Sort, but you should understand the difference between Heap and Selection sort.) - see demo on lecture outlines page b. Divide and conquer sorting - 13.4 (section on Quick Sort only) - see demo on lecture outlines page c. Address calculation sorting - 13.6 (section on Radix Sort only) 6. Miscellania ------------- a. Priority Queues - this data structure was discussed all through the coures. we looked at heap, sorted array, and unsorted array implementations. make sure you understand the priority queue ADT and can analyze the different representations. b. Binary Search - make sure you understand the concept and can follow the code in programs 5.41 and 5.42. - see also the demo on the lecture outlines page c. The Assignments - The collection ADT implemented as headed linked lists, binary search trees, and AVL trees. - Dijkstra's algorithm using adjacency matrix  - Radix sorting using queues - make sure you know all of the above. That's it. Good luck!