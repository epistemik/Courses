{ Mark Sattolo,  428500,  CSI-1100A,  prof: Dr. S. Boyd }{ Tutorial #1,  TA: Chris Lankester }{ Square root approximation }program  ApproxSquareRoot (input,output);{ Find the approximate square root of an integer N.  }{ Data Dictionary	GIVENS:   N - a number for which we want to find N!	INTERMEDIATES:  Counter - used to count up to N.	RESULTS:  Fact - which is equal to N!	}type	RealArray = array[1..27] of real;var	N, i : integer;	X : RealArray;begin	Repeat			{ Read in the algorithm's givens. }		write('Please enter a positive integer: ');		readln(N);		writeln;				if N > 0 then			begin						{ initialize }						X[1] := N/2;				{ a for loop is used to calculate X }				writeln('The successive approximations for the square root of ', N, ' are:');				writeln;				write(X[1]:9:5);				for i := 2 to 7 do					begin						X[i] := (X[i-1] + N/X[i-1])/2;						write(X[i]:11:5)					end;	{ for }				writeln;				writeln('SQRT(N) = ', SQRT(N):11:5);				writeln('еееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее')			end	{ if N > 0 }		else			writeln('Program terminated.  Press Cmd-Q to exit window.');	until N = 0end.