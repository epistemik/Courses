{ Mark Sattolo  428500     CSI-1100A  DGD-1  TA: Chris Lankester   Class Notes p.79, Question 6 }program  GetSomething (input,output);{ This program finds the most frequently occurring word in a string.  }{ Data Dictionary	   Givens:	S - a string consisting of words separated by single spaces.Intermediates:	Words - an array filled with the individual words in S.				NumWords - the number of words in Words.	  Results:	FreqWord - the most frequently occuring word in S.	     Uses:	SWAP }const	Maxsize = 27;type	CharArray = array[1..MaxSize] of char;{ ************************************************************************ }	procedure FillArray(var ArrayName : CharArray; var ArraySize : integer);	var		K : integer;	{ K - an index in the prompt for values. }    	begin	{ procedure FillArray }		repeat			write('Please enter the size [ from 1 to ', MaxSize, ' ] of the array: ');	    	readln(ArraySize);	    	writeln;	    until (ArraySize <= MaxSize) and (ArraySize > 0);    	for K := 1 to ArraySize do        	begin            	writeln('Please enter array value #', K, '?');            	read(ArrayName[K])         	end; { for }	end;	{ procedure FillArray }  {*************************************************************************************}var	A, B : CharArray;	N, M, X, i, r : integer;begin	{ Read in the program's givens. }repeat	{ start input loop }	{ Get the input values }	writeln('For the array to be searched,');	FillArray(A, N);	writeln;	writeln('Enter the # of spaces to rotate the array,');	write(' +ve for right, -ve for left, 0 to exit: ');	readln(X);		{ body  }	if X <> 0 then begin	M := X mod N;	if M < 0 then		M := N + M;	for i := 1 to N do		if (i - M) > 0 then			B[i] := A[i-M]		else			B[i] := A[N+i-M];					{ write out the results }	writeln;	writeln('***************************************************');	writeln('     CSI-1100 Class Notes p.79, Question 6');	writeln('***************************************************');	writeln;	writeln;	write('The altered array is: ');	for r := 1 to N do		write(B[r]:3);	writeln;	writeln;	end;	{ if X <> 0 }until X = 0;end.