{ Mark Sattolo  428500     CSI-1100A  DGD-1  TA: Chris Lankester   1997 Final Exam, Question 5 }program  MostFlights (input,output);const	MaxSize = 20;type	ArrayType = array[1..MaxSize, 1..MaxSize] of integer;{ *************************************************************************** }  procedure FindCommon(Flights:ArrayType; N,i,j: integer; var Common: integer); var	k : integer;  begin 	Common := 0; 	for k := 1 to N do		if (Flights[i,k] = 1) and (Flights[i,k] = Flights[j,k]) then			inc(Common); end;	{ procedure FindCommon } { *************************************************************************** }	procedure MostDest(Flights:ArrayType; N:integer; var CityA, CityB, Most: integer); 	var	i, j, Common : integer; 	begin	 	Most := 0;		for i := 1 to N-1 do			for j := i+1 to N do				begin				FindCommon(Flights, N, i, j, Common);				if Common > Most then					begin					Most := Common;					CityA := i;					CityB := j;					end;	{ if }				end;	{ for }	end;	{ procedure MostDest }{ *************************************************************************** }{ Program MostFlights }var	Flights : ArrayType;	N, i, j, Dest1, Dest2, Most : integer;	beginrepeat	{ start outer input loop }	{ Read in the program's givens. }	repeat	write('Please enter a value from 1 to ', MaxSize, ' [ <1 to exit ] for N: ');		readln(N);	until (N <= MaxSize);	for i := 1 to N do		begin		writeln('Please enter values (with a space between) for row #', i);		for j := 1 to N do			read(Flights[i,j]);		end;		{ body }		MostDest(Flights, N, Dest1, Dest2, Most);		{ write out the results }	writeln;	writeln('**********************************************');	writeln('     Mark Sattolo  428500');	writeln('     CSI-1100A  DGD-1  TA: Chris Lankester');	writeln('     1997 Final Exam, Question 5');	writeln('**********************************************');	writeln;	if N > 1 then 		writeln('The Flights array is: ');	writeln;	for i := 1 to N do		begin		for j := 1 to N do			write(Flights[i,j]:3, ' ');		writeln;		end;	{ for loop to write Flights }		{ inform user of the most number of flights }		if N > 1 then 		begin		writeln;		writeln('The two cities with the most destinations in common are:');		writeln('City ', Dest1, ' and City ', Dest2, ' with ', Most, ' common destinations.');		writeln;		end;until	N < 1;	{ end outer input loop }end.