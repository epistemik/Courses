[X|[Y,Z|[a]]] = [b,X|[Y,_]].X = b Y = b Z = b ;noa([X,[Y,a(X)]]) = a([[a]|[[X|T]]]).X = [a] Y = [a] T = [a([a])] ;no[X,Y|[Z]] = [[a,b,c]].no[X,Y|[Z]] = [a,b,c].X = a Y = b Z = c yesis_list(a).nois_list([a]).yesis_list(.(s,a)).yesis_list([a|b]).yesis_list([a|b]).nois_list([a,b]).yesis_list([a|[b]]).yesis_list([]).yesjoin([a,b,c], [d,e,f], List).List = [a,b,c,d,e,f] ;nojoin([a,b,c], (d,e,f), List).List = [a,b,c|(d,e,f)] yesjoin([a,b,c], [d], List).List = [a,b,c,d] yesjoin([a,b,c], d, List).List = [a,b,c|d] yes[a,b,c,d] = [a,b,c|d].no[A,B,C,D] = [a,b,c|d].nofunctor([a,b,c|d], X, Y).X = . Y = 2 yes[A,B,[C,D]] = [a,b,c|d].no[A,B,[C|D]] = [a,b,c|d].no[A,B,C,D] = [a,b,[c|d]].no[A,B,C] = [a,b,c|d].no[A,B,C] = [a,b,[c|d]].A = a B = b C = [c|d] yes[A,B,C] = [a,b,c|[d]].no[A,B,C,D] = [a,b,c|[d]].A = a B = b C = c D = d yes[A,B] = [a,b,c|d].nois_list([a,b,c|d]).nois_list([a,b,[c|d]]).nois_list([a,b,c|[d]]).nois_list([a,b,[c|d]]).yesis_list([a,b,c|[d]]).yesis_list([a,b,[c|d]]).nois_list([a,b,[c|[d]]]).nois_list([a,b,c,d]).nois_list([a,b]).yesis_list([a,b,c]).nois_list([a,b,c,d]).yesis_list([a,b,c|d]).nois_list([a,b,c|d]).nois_list([a,b,[c|d]]).yesis_list([a,b,c|[d]]).yesis_list(X).X = [] yesis_list([a,b,c|d]).nois_list([a,b,[c|d]]).notrace(is_list([a,b,[c|d]])).nois_list([a,b,[c|[d]]]).nois_list([a,b]).notrace(is_list([a,b])).[Execution aborted]is_list([a,b]).yesis_list([a,b,[c|[d]]]).yesis_list([a,b,[c|d]]).yesis_list([a,b,c|d]).nois_list(X).nois_list([c|d]).nois_list([c|[d]]).yesis_list([a,b,c|d]).nois_list([a,[b,[c|[d]],e],[f]]).yessupermax([1,2,[3,[44],5,[8,[23,[-234, 999], 0], 88]], 111], Max).È evaluation_error: [goal(5>[8,[23,[-234,999],0],88]),argument_index(2)][Execution aborted]supermax([1,2,[3,[44],5,[8,[23,[-234, 999], 0], 88]], 111], Max).È evaluation_error: [goal(5>[8,[23,[-234,999],0],88]),argument_index(2)][Execution aborted]supermax([1,2], Max).Max = 2 ;nosupermax([1,2,[3]], Max).Max = [3] yessupermax([1,2,[3,[44]]], Max).È evaluation_error: [goal(2>[3,[44]]),argument_index(2)][Execution aborted]trace(supermax([1,2,[3,[44]]], Max)).notrace(supermax([1,2,[3,[44]]], Max)).È evaluation_error: [goal(2>[3,[44]]),argument_index(2)][Execution aborted]supermax([1,2,[3,[44]]], Max).notrace(supermax([1,2,[3,[44]]], Max)).[Execution aborted]supermax([1,2,[3,[44]]], Max).È evaluation_error: [goal(44>no_max_in_empty_list),argument_index(2)][Execution aborted]supermax([1,2,[3,[44]]], Max).nohas_addition(X).X = _1137+_1138 yeshas_addition(X+9).X = _1290 yeshas_addition(3*(X+9)-(2+5)/4).X = _1597 yeshas_addition(3*(7+9)-(2+5)/4).yeshas_addition((3*(X+9))-((2+5)/4)).X = _2167 yeshas_addition((3*(X+9)-(2+5)/4)).X = _2485 yestrace(has_addition((3*(X+9)-(2+5)/4))).X = _2804 yestrace(has_addition((((3*(X+9)-(2+5)/4))))).[Execution aborted]supermax([1,2,[3,[44]]], Max).Max = 44 yessupermax([1,2,[3,[44]],[],8], Max).nosupermax([]).nosupermax([1,2,[3,[44]],[],8], Max).nosupermax([1,2,[3,[44]],8], Max).Max = 44 yesintersection([], [], List).List = [] yesintersection([a,c,d,c], [e,f,g,d], List).List = [d] yesintersection2([a,c,d,c], [e,f,g,d], List).List = [d] yesintersection([a,c,d,c], [e,f,g,X], List).X = a List = [a] yesintersection2([a,c,d,c], [e,f,g,X], List).X = a List = [a] yesintersection([a,c,d,c], [e,f,g,d,5,c,6], List).List = [d,c] yesintersection2([a,c,d,c], [e,f,g,d,5,c,6], List).List = [c,d] yesintersection([a,c,d,c,Y], [e,f,g,d,5,Y,c,6], List).Y = a List = [d,c,a] yesintersection2([a,c,d,c,Y], [e,f,g,d,5,Y,c,6], List).Y = a List = [a,c,d] yesintersection([a,c,d,c,X], [e,f,g,d,5,Y,c,6], List).X = e Y = a List = [a,d,c,e] yesintersection2([a,c,d,c,X], [e,f,g,d,5,Y,c,6], List).X = e Y = a List = [a,c,d,e] yesintersection([a,c,d,c,Y], [e,f,g,d,5,Y,c,6], List).Y = a List = [d,c,a] ;no