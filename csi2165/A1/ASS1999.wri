CSI2165A / Assignment 1   Issue date :  Friday, September 24, 1999Due date :  Monday, October 4, 1999, 3:45pm.Hand In :  Each student is required to do this assignment INDIVIDUALLY and to hand in the following:(1)	A 3.5" disk containing the Prolog program corresponding to questions 1.a-d of the assignment. The file containing this program must be named `assign1.ari', and must be the ONLY file on the disk. (2)	A printout of `assign1.ari' .(3)	A maniac printout of the queries and the resulting output generated by Arity Prolog for part 1.e.(4)	A handwritten, or preferably typed, answer to question 2, indicating all the steps and relevant information in the trace.  Place the above items in a suitable envelope, with the following information clearly marked on the outside of the envelope: complete name, student number, assignment number and course code (CSI2165A).  Deposit your envelope in the LOCKED BOX marked `CSI 2165A' beside the reception desk on the third floor of MacDonald Hall. IMPORTANT:  Your Prolog program must conform to the programming standards described in file stndrds.txt located in 'assignments' directory of CSI 2165A home page at: 	   http://www.site.uottawa.ca/ftppub/courses/Fall/csi2165A/ .----------------------------------------------------------------------------1 - Consider the following food items taken from a restaurant menu:  salad :  ceasar (2.50, 110), greek (3.00, 130)  soup: chicken (3.50, 135), mushroom (2.75, 120), onion (3.00, 140), tomato (2.50, 120)  fish :  salmon (5.50, 540), trout (6.50, 510), tuna (5.00, 480)  meat :  beef (4.50, 540), chicken (5.00, 430), ham (3.50, 550)  vegetarian :  fried-rice(3.50, 350), steamed-rice(3.00, 270)  cake :  apple-pie (2.00, 300), cheese-cake (3.00, 350), danish (1.50, 250)  ice-cream :  banana-split (3.50, 300), belle-helene (4.00, 325)  drink :  coffee (1.25, 50), capuccino (3.00, 125), espresso (3.00, 100), tea (1.00, 40)The numbers between parentheses represent the price and the amount of calories of each item. For instance, a greek salad costs $3.00 and it has 130 calories.a)	Declare a Prolog database of all the food items above with their prices and calory amounts. For example, the  ceasar salad could be declared by the fact `food(salad, ceasar, 2.50, 110)'.b)	Define the relations `appetizer(Food, Price, Cal)', `main_course(Food, Price, Cal)' and `dessert(Food, Price, Cal)' that determine whether a food item Food is an appetizer, a main course or a dessert, respectively. These relations should also return the price and the amount of calories of Food. You must use the following classification:*  an appetizer is composed of a salad or a soup;*  a main course is composed of fish or meat or vegetarian;*  a dessert is composed of cake or ice cream.c)	Define the relation `meal(A, M, DS, DR)', given that a meal is composed of an appetizer (represented by A), a main course (represented by M), a dessert (represented by DS) and a drink (represented by DR).d)	Define the relations `meal_price(A, M, DS, DR, PR)' and `meal_calories(A, M, DS, DR, Cal)' that determine the price PR and the amount of calories Cal of each meal composed of A, M, DS and DR (as defined  in 1.c), respectively. Note:  You can use the "is" operator to evaluate a mathematical expression and match it  to another term such as an unistantiated variable. For example if you want to set an uninstaniated variable X to the result of evaluating 2*12 -3, you can write:	X is 2*12 -3because X is uninstantiated it will match with any valid Prolog object including number 21 which is the result of evaluating the expression on the right hand side of the 'is' operator. In effect this will set X to the value of this expression.e)	Give Prolog queries for the following questions (try to use the anonymous variable, if applicable):i)   which meals have a greek salad, and a coffee ?ii)  which meals consist of a soup, a cake and an espresso ?iii)	what are the amounts of calories of the meals that have a trout, an apple-pie and a coffee ?iv) 	what are the prices of the meals that have a mushroom soup, vegetarian food and ice-cream ?v)	can you have a meal with more than 900 calories for less than 8 dollars?  Note: you can use relational operators  > , <  for this query.vi)  print all the meals except the ones which fish is their main course.Note:	You can use \= operator to check if the left hand side operand does not match with the right hand side operand. For instance, try the following queries and verify the results.   ?- bob \= tom.   yes   ?- bob \= bob.   no2 -  Suppose we have the following Prolog program about companies and their employees:employee(john, ibm).employee(sarah, ibm).employee(shawn, newbridge).employee(nicolas, newbridge).owns(ibm, oti).owns(ibm, commquest).owns(siemens, sse).employee(nicole, oti).employee(ben, commquest).works_for(Person, Company) :- employee(Person, Company).works_for(Person, Company) :- is_owned_by(A_Company, Company), 			      employee(Person, A_Company).is_owned_by(C2, C1) :- owns(C1, C2).is_owned_by(C2, C1) :- owns(C1, A_Company), is_owned_by(C2, A_Company).     Trace the following query the same way that  we did in the class and tutorials     (i.e. current goal, unification, variable instantiation, backtracking, etc.):		?- works_for(P, ibm).     Assume that the user requests all possible solution by pressing ';'.