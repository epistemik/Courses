% is_bst/1def_bst1(X), is_bst(X).X = bt(bt(bt(nil,2,nil),4,bt(nil,5,nil)),6,bt(bt(nil,7,bt(nil,8,nil)),9,bt(nil,10,nil))) yesdef_bst2(X), is_bst(X).nodef_hrz(X), is_bst(X).È evaluation_error: [goal(x>=a),argument_index(1)][Execution aborted]% horizontal/2def_hrz(X), horizontal(X, L).X = bt(bt(bt(nil,2,nil),a,bt(nil,8,bt(nil,9,nil))),x,bt(bt(nil,b,nil),d,bt(nil,z,nil))) L = [x,a,d,2,8,b,z,9] yesqueue(X).nolist(X).nodef_bst2(X), horizontal(X, L).X = bt(bt(bt(nil,13,nil),-6,bt(nil,99,nil)),3,bt(bt(nil,42,bt(nil,27,nil)),81,bt(nil,-5,nil))) L = [3,-6,81,13,99,42,-5,27] yesdef_bst1(X), horizontal(X, L).X = bt(bt(bt(nil,2,nil),4,bt(nil,5,nil)),6,bt(bt(nil,7,bt(nil,8,nil)),9,bt(nil,10,nil))) L = [6,4,9,2,5,7,10,8] yes% sum_tree/2sum_tree(t(_, t(_), t(_)), NT).NT = t(0,t(0),t(0)) yessum_tree(t(_, t(2), t(3)), NT).NT = t(5,t(2),t(3)) ;nosum_tree(t(10,t(1), t(2)), NT).NT = t(3,t(1),t(2)) yessum_tree(t(_,t(8), t(6)), NT).NT = t(14,t(8),t(6)) yessum_tree(t(_, t(_, t(2), t(3)), t(8), t(3, t(6), t(1))), NT).NT = t(20,t(5,t(2),t(3)),t(8),t(7,t(6),t(1))) yessum_tree(t(_, t(_,t(2),t(3)), t(8,t(_,t(77,t(99),t(-666))), t(3,t(6,t(1,t(_))),t(1)))), NT).NT = t(-561,t(5,t(2),t(3)),t(-566,t(-567,t(-567,t(99),t(-666))),t(1,t(0,t(0,t(0))),t(1)))) yessum_tree(t(_,t(_,t(2),t(3)),t(8,t(_,t(77,t(99),t(-666)))),t(3,t(6,t(1,t(_)))),t(1))), NT).NT = t(-555,t(5,t(2),t(3)),t(-567,t(-567,t(-567,t(99),t(-666)))),t(7,t(6),t(1))) yes% add/3T1 = t(1,t(2),t(3,t(4))), T2 = t(1,t(-2),t(3,t(6))), add(T1, T2, Sum).T1 = t(1,t(2),t(3,t(4))) T2 = t(1,t(-2),t(3,t(6))) Sum = t(2,t(0),t(6,t(10))) ;noT1 = t(1,  t(2),  t(3, t(4))), T2 = t(1,  t(-2), t(3)), add(T1, T2, Sum).T1 = t(1,t(2),t(3,t(4))) T2 = t(1,t(-2),t(3)) Sum = t(2,t(0),t(6,t(4))) yesT1 = t(3,t(4, t(5)),t(6, t(7)) ),T2 = t(3,t(6, t(6)),t(7, t(0)) ),add(T1, T2, Sum).T1 = t(3,t(4,t(5)),t(6,t(7))) T2 = t(3,t(6,t(6)),t(7,t(0))) Sum = t(6,t(10,t(11)),t(13,t(7))) ;noT1 = t(1,t(2),t(3,t(4,t(5)),t(6,t(7)))),T2 = t(1,t(-2),t(3,t(6,t(6)),t(7,t(0)), t(9))), add(T1, T2, Sum).T1 = t(1,t(2),t(3,t(4,t(5)),t(6,t(7)))) T2 = t(1,t(-2),t(3,t(6,t(6)),t(7,t(0)),t(9))) Sum = t(2,t(0),t(6,t(10,t(11)),t(13,t(7)),t(9))) yesT1 = t(1,t(2),t(3,t(4,t(5)),t(6,t(7),t(10)))),T2 = t(1,t(-2),t(3,t(6,t(6),t(3,t(4))), t(7,t(0)),t(9))),add(T1, T2, Sum).T1 = t(1,t(2),t(3,t(4,t(5)),t(6,t(7),t(10)))) T2 = t(1,t(-2),t(3,t(6,t(6),t(3,t(4))),t(7,t(0)),t(9))) Sum = t(2,t(0),t(6,t(10,t(11),t(3,t(4))),t(13,t(7),t(10)),t(9))) yes% min_in_column/3min_in_column(1, a/3, Min).Min = 1 yesmin_in_column(2, a/3, Min).Min = -2 yesmin_in_column(3, a/3, Min).Min = 4 yesmin_in_column(1, a/4, Min).Min = 3 yesmin_in_column(1, a/5, Min).nomin_in_column(0, a/3, Min).no% split/2split(what_is_this, List).List = [what,is,this] yessplit(what_isThis, List).List = [what,is,This] yessplit(pointerToElement2, L).L = [pointer,To,Element2] ;nosplit(poToEl2, L).L = [po,To,El2] yessplit('2nd_pointerToElement2', L).2nd_pointerToElement2 is not a valid variable namenovarname(X).nosplit('_pointerToElement2', L).L = [pointer,To,Element2] yessplit('Here_is_A_mixExample', L).L = [Here,is,A,mix,Example] yessplit('Here_is_A_mix3Example', L).L = [Here,is,A,mix3,Example] ;nosplit('_Here_is_A_mix_Example', L).L = [Here,is,A,mix,Example] yessplit('PointerTo:Element2', L).PointerTo:Element2 is not a valid variable namenosplit('Poi@terTo_Element2', L).Poi@terTo_Element2 is not a valid variable namenosplit('_pointerToElement2', L).L = [pointer,To,Element2] yessplit('__pointerToElement2', L).L = [pointer,To,Element2] yessplit('_pointer_ToAVLtree', L).L = [pointer,To,A,V,Ltree] yessplit('_pointer_ToAVLgElement2', L).L = [pointer,To,A,V,Lg,Element2] yes% indexed_add/5S1 = a(1, 3, 4),S2 = b(2, 4, 6, -1),Index1 = [3, 4, 1, 2, 6],Index2 = [3, 3, 2],indexed_add(S1, S2, Index1, Index2, Answer).S1 = a(1,3,4) S2 = b(2,4,6,-1) Index1 = [3,4,1,2,6] Index2 = [3,3,2] Answer = result(10,6,5,3,0) ;noS1 = a(1, 3, 4),S2 = b,Index1 = [3, 4, 1, 2, 6],Index2 = [3, 3, 2],indexed_add(S1, S2, Index1, Index2, Answer).S1 = a(1,3,4) S2 = b Index1 = [3,4,1,2,6] Index2 = [3,3,2] Answer = result(4,0,1,3,0) yesS1 = a(1, 3, 4,-11,33),S2 = b(909,666,334),Index1 = [3, 4, 1, 2, 6,8,11,5],Index2 = [3, 3, 2,0,99,5,21],indexed_add(S1, S2, Index1, Index2, Answer).S1 = a(1,3,4,-11,33) S2 = b(909,666,334) Index1 = [3,4,1,2,6,8,11,5] Index2 = [3,3,2,0,99,5,21] Answer = result(338,323,667,3,0,0,0,33) yesS1 = a(1, 3, 4,-11,33,-111,88,3425,-13),S2 = b(909,666,334,111,-99,-5847),Index1 = [3, 4, 1, 2, 6,8,11,5],Index2 = [3, 3, 2,0,99,5,21],indexed_add(S1, S2, Index1, Index2, Answer).S1 = a(1,3,4,-11,33,-111,88,3425,-13) S2 = b(909,666,334,111,-99,-5847) Index1 = [3,4,1,2,6,8,11,5] Index2 = [3,3,2,0,99,5,21] Answer = result(338,323,667,3,-111,3326,0,33) yesS1 = a(1, 3, 4,-11,33,-111,88,3425,-13),S2 = b(909,666,334,111,-99,-5847),Index1 = [3, 4, 1, 2, 6,8,11,5,14,7,2,44,99],Index2 = [3, 3, 2,0,99,5,21],indexed_add(S1, S2, Index1, Index2, Answer).S1 = a(1,3,4,-11,33,-111,88,3425,-13) S2 = b(909,666,334,111,-99,-5847) Index1 = [3,4,1,2,6,8,11,5,14,7,2,44,99] Index2 = [3,3,2,0,99,5,21] Answer = result(338,323,667,3,-111,3326,0,33,0,88,3,0,0) yes