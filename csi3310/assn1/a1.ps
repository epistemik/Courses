%!PS-Adobe-3.0
%%BoundingBox: 54 72 558 720
%%Creator: Mozilla (NetScape) HTML->PS
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 3
%%PageOrder: Ascend
%%Title: CSI 3310/3710, Assignment 1
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
 /two /three /four /five /six /seven /eight /nine /colon /semicolon
 /less /equal /greater /question /at /A /B /C /D /E
 /F /G /H /I /J /K /L /M /N /O
 /P /Q /R /S /T /U /V /W /X /Y
 /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
 /d /e /f /g /h /i /j /k /l /m
 /n /o /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
 /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
 /threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
 /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
 /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
 /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
 /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/c { matrix currentmatrix currentpoint translate
     3 1 roll scale newpath 0 0 1 0 360 arc setmatrix } bind def
/F0
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f0 { /F0 findfont exch scalefont setfont } bind def
/F1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f1 { /F1 findfont exch scalefont setfont } bind def
/F2
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f2 { /F2 findfont exch scalefont setfont } bind def
/F3
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f3 { /F3 findfont exch scalefont setfont } bind def
/F4
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f4 { /F4 findfont exch scalefont setfont } bind def
/F5
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f5 { /F5 findfont exch scalefont setfont } bind def
/F6
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f6 { /F6 findfont exch scalefont setfont } bind def
/F7
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f7 { /F7 findfont exch scalefont setfont } bind def
/rhc {
    {
        currentfile read {
	    dup 97 ge
		{ 87 sub true exit }
		{ dup 48 ge { 48 sub true exit } { pop } ifelse }
	    ifelse
	} {
	    false
	    exit
	} ifelse
    } loop
} bind def

/cvgray { % xtra_char npix cvgray - (string npix long)
    dup string
    0
    {
	rhc { cvr 4.784 mul } { exit } ifelse
	rhc { cvr 9.392 mul } { exit } ifelse
	rhc { cvr 1.824 mul } { exit } ifelse
	add add cvi 3 copy put pop
	1 add
	dup 3 index ge { exit } if
    } loop
    pop
    3 -1 roll 0 ne { rhc { pop } if } if
    exch pop
} bind def

/smartimage12rgb { % w h b [matrix] smartimage12rgb -
    /colorimage where {
	pop
	{ currentfile rowdata readhexstring pop }
	false 3
	colorimage
    } {
	exch pop 8 exch
	3 index 12 mul 8 mod 0 ne { 1 } { 0 } ifelse
	4 index
	6 2 roll
	{ 2 copy cvgray }
	image
	pop pop
    } ifelse
} def
/cshow { dup stringwidth pop 2 div neg 0 rmoveto show } bind def
/rshow { dup stringwidth pop neg 0 rmoveto show } bind def
/BeginEPSF {
  /b4_Inc_state save def
  /dict_count countdictstack def
  /op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
  10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  { pop languagelevel 1 ne
    { false setstrokeadjust false setoverprint } if
  } if
} bind def
/EndEPSF {
  count op_count sub {pop} repeat
  countdictstack dict_count sub {end} repeat
  b4_Inc_state restore
} bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
88.3 697.5 moveto
24 f1
(Assignment 1, a banking system) show
75.6 672.5 moveto
352.8 0 rlineto 0 -1.4 rlineto -352.8 0 rlineto closepath  fill 
0.2 658.6 moveto
0.25 0.25 c  fill 
1 654.5 moveto
12 f1
(Introduction:) show
70.3 654.5 moveto
12 f0
( ) show
28 627.9 moveto
12 f0
(This assignment consists of two programming exercises. For each exercise, you will simulate a) show
28 614.6 moveto
12 f0
(very simple banking system by using threads. The use of synchronized methods is forbidden for) show
28 601.3 moveto
12 f0
(this assignment. Hence, some threads might obtain inconsistent views of the shared data. ) show
28 574.7 moveto
12 f0
(For each exercise, please return a folder that contain all your .java source files for that exercise and) show
28 561.4 moveto
12 f0
(a short text file \(called discussion.txt\) of at most one page that will discuss briefly the results) show
28 548.1 moveto
12 f0
(obtained for your simulations. You must follow ) show
259.9 548.1 moveto
12 f0
(precisely these) show
330.8 548.1 moveto
12 f0
( directives ) show
383.4 548.1 moveto
12 f0
( to submit your) show
28 534.8 moveto
12 f0
(assignment. ) show
28 508.2 moveto
12 f0
(For the CSI 3310 class: submit your assignment to ) show
273.6 508.2 moveto
12 f0
(Nabila Hadibi) show
341.2 508.2 moveto
12 f0
( ) show
28 494.9 moveto
12 f0
(For the CSI 3710 class: submit your assignment to ) show
273.6 494.9 moveto
12 f0
(Nicolas Gorse) show
341.9 494.9 moveto
12 f0
( ) show
28 467.8 moveto
12 f1
(Due date: June 2, 2000 at 16:00. That due date is FIRM) show
0.2 444.3 moveto
0.25 0.25 c  fill 
1 440.2 moveto
12 f1
(Exercise 1, bank accounts) show
133 440.2 moveto
12 f0
( ) show
28 413.6 moveto
12 f0
(Your program must provide an implementation of a bank account. Four persons will be using this) show
28 400.3 moveto
12 f0
(bank account: two persons will periodically deposit money into the account and the other two) show
28 387 moveto
12 f0
(persons will periodically withdraw money from the account. ) show
28 360.4 moveto
12 f0
(Your program must contain \(at least\) four classes: one class for the account, one class for the) show
28 347.1 moveto
12 f0
(persons making deposits, one class for the persons making withdrawals, and one class containing) show
28 333.8 moveto
12 f0
(the ) show
45.6 333.8 moveto
12 f2
(main) show
69.6 333.8 moveto
12 f0
( method and the necessary start up code. ) show
28 306.9 moveto
12 f3
(- The Account class :) show
132.6 306.9 moveto
12 f0
( ) show
56 293.6 moveto
12 f0
(This class contains the actual balance \(i.e. the amount remaining\) \(initialized to 500$\) of that) show
56 280.3 moveto
12 f0
(account, a method to see \(or read\) the actual balance, and methods to deposit and withdraw) show
56 267 moveto
12 f0
(money. The withdraw method must refuse to withdraw an amount that exceeds the actual) show
56 253.7 moveto
12 f0
(balance.) show
28 213.5 moveto
12 f3
(- The Provider class :) show
133.9 213.5 moveto
12 f0
( ) show
56 200.2 moveto
12 f0
(This class must inherit from the ) show
211.3 200.2 moveto
12 f2
(Thread) show
246.2 200.2 moveto
12 f0
( class. A provider performs an infinite number of) show
56 186.9 moveto
12 f0
(times the following loop. First it makes a deposit of a random amount \(between $1 and) show
56 173.6 moveto
12 f0
($100\) and then reads the new balance. Then it writes a message on the screen that indicates) show
56 160.3 moveto
12 f0
(the amount of the deposit and the new balance of the account. Then it sleeps for a period of) show
56 147 moveto
12 f0
(time \(randomly chosen between 10 and 40 msec\), and repeats. Example of a message:) show
56 133.7 moveto
12 f0
("Provider x has made a deposit of $36 and the new balance is $54".) show
28 93.5 moveto
12 f3
(- The Withdrawer class :) show
150 93.5 moveto
12 f0
( ) show
56 80.2 moveto
12 f0
(This class must inherit from the ) show
211.3 80.2 moveto
12 f2
(Thread) show
246.2 80.2 moveto
12 f0
( class.  A withdrawer performs an infinite number of) show
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
56 709.2 moveto
12 f0
(times the following loop. First it examines the actual balance, sleeps for 20 msec, and then) show
56 695.9 moveto
12 f0
(withdraws an amount chosen randomly between $1 and the actual balance. Then it reads the) show
56 682.6 moveto
12 f0
(new balance and writes a message on the screen that indicates the amount of the withdrawal) show
56 669.3 moveto
12 f0
(and the new balance of the account.  Then it sleeps for a period of time \(randomly chosen) show
56 656 moveto
12 f0
(between 10 and 40 msec\), and repeats. Example of a message: "Withdrawer x has withdrawn) show
56 642.7 moveto
12 f0
($21 and the new balance is $74". ) show
56 629.4 moveto
12 f0
( ) show
28 616.1 moveto
12 f0
(This program will run forever. Type <ctrl-c> to end the execution. Also, you can use the ">" to) show
28 602.8 moveto
12 f0
(redirect output to a file as in: ) show
28.8 576.2 moveto
12 f0
(java Ass1_1 > out.txt ) show
28 549.1 moveto
12 f1
(Discussion on inconsistent views:) show
196.3 549.1 moveto
12 f0
( A withdrawer always attempts to withdraw an amount less or) show
28 535.8 moveto
12 f0
(equal to the actual balance. Then, can it happen that a withdraw request be rejected? \(explain\) Is it) show
28 522.5 moveto
12 f0
(possible, in theory, to obtain other types of inconsistent views? \(If so, explain and give an) show
28 509.2 moveto
12 f0
(example\)) show
0.2 486.2 moveto
0.25 0.25 c  fill 
1 482.1 moveto
12 f1
(Exercise 2, credit cards) show
120.3 482.1 moveto
12 f0
( ) show
28 455.5 moveto
12 f0
(Your program implements three bank accounts and a person that is the owner of these three bank) show
28 442.2 moveto
12 f0
(accounts. The owner periodically transfers money between bank accounts. Your program also) show
28 428.9 moveto
12 f0
(implements a credit card service that periodically computes the total sum of money contained in) show
28 415.6 moveto
12 f0
(these three accounts and accepts to deliver a credit card to the owner if and only if this total sum) show
28 402.3 moveto
12 f0
(exceeds or equals a specified amount. ) show
28 375.7 moveto
12 f0
(Your program must \(at least\) contain these classes : one class for the accounts, one class for the) show
28 362.4 moveto
12 f0
(owner, one class for the credit card service, and one class that contains the ) show
387.9 362.4 moveto
12 f2
(main) show
411.9 362.4 moveto
12 f0
( method and the) show
28 349.1 moveto
12 f0
(necessary start up code. ) show
28 322.2 moveto
12 f3
(- The Account class :) show
132.6 322.2 moveto
12 f0
( ) show
56 308.9 moveto
12 f0
(This class contains the actual balance \(i.e. the amount remaining\) \(each initialized to 100$\)) show
56 295.6 moveto
12 f0
(of an account, a method to see \(or read\) the actual balance, and methods to deposit and) show
56 282.3 moveto
12 f0
(withdraw money. The withdraw method must refuse to withdraw an amount that exceeds the) show
56 269 moveto
12 f0
(actual balance. ) show
56 255.7 moveto
12 f0
( ) show
28 242.1 moveto
12 f3
(- The Owner class :) show
124.6 242.1 moveto
12 f0
( ) show
56 228.8 moveto
12 f0
(This class must inherit from the ) show
211.3 228.8 moveto
12 f2
(Thread) show
246.2 228.8 moveto
12 f0
( class. The owner performs infinitely often the) show
56 215.5 moveto
12 f0
(following loop. First it chooses a pair \(source, destination\) of accounts randomly among the) show
56 202.2 moveto
12 f0
(three accounts. Then it reads the balance of the source account. It chooses randomly an) show
56 188.9 moveto
12 f0
(amount between $1 and the balance of the source account. Then it subtracts that amount) show
56 175.6 moveto
12 f0
(from the source account, sleeps for 20 msec, and then add this amount to the destination) show
56 162.3 moveto
12 f0
(account \(to complete the transfer\). After this operation it writes on the screen a message like) show
56 149 moveto
12 f0
(this: "Owner has transferred amount $x from account A to account B". Then sleeps for a) show
56 135.7 moveto
12 f0
(period of time \(randomly chosen between 10 and 40 msec\), and repeats. ) show
56 122.4 moveto
12 f0
( ) show
28 108.8 moveto
12 f3
(- The CreditCardService class :) show
182.6 108.8 moveto
12 f0
( ) show
56 95.5 moveto
12 f0
(This class must inherit from the ) show
211.3 95.5 moveto
12 f2
(Thread) show
246.2 95.5 moveto
12 f0
( class. The credit card service performs infinitely) show
56 82.2 moveto
12 f0
(often the following loop. The service computes the total sum of money present in all of the) show
pagelevel restore
showpage
%%Page: 3 3
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
56 709.2 moveto
12 f0
(owner's accounts. If this sum is greater or equal to $280. then it accepts to deliver a credit) show
56 695.9 moveto
12 f0
(card to the owner \(and indicates that fact on the screen\). Otherwise, it refuses to deliver the) show
56 682.6 moveto
12 f0
(credit card to the owner \(and indicates that fact on the screen\). Then sleeps for a period of) show
56 669.3 moveto
12 f0
(time \(randomly chosen between 10 and 40 msec\), and repeats. ) show
56 656 moveto
12 f0
( ) show
28 642.2 moveto
12 f1
(Discussion on inconsistent views:) show
196.3 642.2 moveto
12 f0
( The credit card service should always accept to deliver a credit) show
28 628.9 moveto
12 f0
(card. Does this always happens? \(explain\). Is it possible, in theory, to obtain other types of) show
28 615.6 moveto
12 f0
(inconsistent views? \(If so, explain and give an example\)) show
0 575.2 moveto
12 f1
(Good luck!) show
57 575.2 moveto
12 f0
( ) show
pagelevel restore
showpage
%%EOF
