Laboratory 3: Pointers & Arrays--------------------------------------------   * Example 1 (Exercise!)           pointers.exe [.exe]            |            +- pointers.cpp [.cpp]           (Unix Makfile pointers.make)     Explain the output! Draw the identifiers and their values as they are arranged in memory      (similarly to the digram on page 38).  (Ask the TA for help, if you need it.)   * Example 2           arrays.exe [.exe]            |            +- arrays.cpp [.cpp]           (Unix Makfile arrays.make)     Explain the differences between the declarations and parameter types!   * Example 3 (Exercise!)           dyna.exe [.exe]            |            +- dyna.cpp [.cpp]           (Unix Makefile dyna.make)     Run and undersatnd the program. Step through the program with the debugger and      make note of the addresses returned by new and malloc.  Verify that these addresses      are given to delete and free.  Draw the layout of the matrices in memory (see page 58).   * Example 4 (notes page 64)           ref.exe [.exe]            |            +- ref.cpp [.cpp]            (Unix command line:                  g++ -o ref ref.cpp -g)     Make very sure you understand the difference between passing a pointer by value      and passing a pointer by reference!   * Example 5 (Exercise!)            types.exe [.exe]             |             +- types.h [.h]             |             +- types.cpp [.cpp]             |             +- main.cpp [.cpp]            (Unix Makefile: types.make)     Run the program.  Understand the type definitions, variable and function declarations.      It is important that you can read and understand these declarations.      You should be able to explain the output.