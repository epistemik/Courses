// FILE:  triangle.cpp// NAME:  Mark Sattolo// STUDENT #:  428500// SECTION:  CSI 2172A// MARKING SECTION:  A4     #include <math.h>#include "triangle.h"// implement the constructor, area(), and print() methods for a triangle shapetriangle::triangle(double s1, double s2, double s3):side1(s1), side2(s2), side3(s3)	{	}double triangle::area() const	{	double semi = ((side1 + side2 + side3)/2.0) ;	return sqrt( semi*(semi - side1)*(semi - side2)*(semi - side3) ) ;	}void triangle::print(ostream& os) const 	{  os << "triangle" << ' ' << side1 << ' ' << side2 << ' ' << side3 ;  }// implement the constructor and instantiate() method for a triangle_instantiatortriangle_instantiator::triangle_instantiator():shape_instantiator("triangle") 	{	}shape* triangle_instantiator::instantiate(istream& is, lexer& L) const {   L.check_token(is, get_name()) ;   double v1 = L.read_numeric(is) ; // get values for the three sides   double v2 = L.read_numeric(is) ;   double v3 = L.read_numeric(is) ;   return new triangle(v1, v2, v3) ;}