#include <iostream.h>#include <iomanip.h>static int lineno = 0;static void print(const char* text) {   cout << setw(5) << ++lineno << ". " << text << endl;}class X {   public:      X() {         print("X::X()");      }      X(int) {         print("X::X(int)");	}      X& operator=(const X&) {         print("X::operator=(const X&)");         return *this;      }      X(const X&) {         print("X::X(const X&)");      }      ~X() {         print("X::~X()");      }};class A {    private:      X x;    public:           A() {         print("A::A()");      }      A(const A&) {         print("A::A(const A&)");      }      A(int c):x(c) {         print("A::A(int)");      }      A& operator=(const A& a) {         x = a.x;         print("A::operator=(const A&)");         return *this;      }      void method() {         print("A::method()");      }      virtual void vmethod() {         print("A::vmethod()");      }      virtual ~A() {         print("A::~A()");      }};    class B: public A {    public:           B() {         print("B::B()");      }      B(const B& b):A(b) {         print("B::B(const B&)");      }      B(int c):A(c) {         print("B::B(int)");      }      B(char*) {         print("B::B(char*)");      }      B& operator=(const B& b) {         A::operator=(b);         print("B::operator=(const B&)");         return *this;      }      void method() {         print("B::method()");      }      void vmethod() {         print("B::vmethod()");      }      ~B() {         print("B::~B()");      }}; A a_foo1(A a) {  return a;	}A a_foo2(const A& a1, A* aptr) {  A tmp;   tmp = a1;  return *aptr;		}  A* b_foo1(const B& b) {   A* tmp = new B(b);   return tmp;		}B b_foo2(B b) {   return b;		}int main() {   lineno = 0;   cout << "EXERCISE 1/a" << endl;   {      A a1,a2, a3[2];      a2 = a_foo1(a3[0]);      a3[1] = a_foo2(5,&a2);   }   cout << "END OF EXERCISE 1/a" << endl;   lineno = 0;   cout << endl << "EXERCISE 1/b" << endl;   {      A *a;      B b[2];      a = b_foo1("hello");      a->method();      a->vmethod();      delete a;      b[0] = b_foo2(b[1]);   }   cout << "END OF EXERCISE 1/b" << endl;};