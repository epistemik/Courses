{VERSION 2 3 "IBM INTEL NT" "2.3" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 0 128 0 128 1 0 1 0 
0 1 0 0 0 0 }{CSTYLE "2D Math" -1 2 "Times" 0 1 186 136 0 0 0 0 2 0 0 
0 0 0 0 }{CSTYLE "2D Output" 2 20 "" 0 0 0 128 128 1 0 0 0 0 0 0 0 0 
0 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 
1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 0 }1 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 0 
0 0 0 0 0 0 0 0 0 2 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Map
le Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 152 0 0 0 0 0 0 0 0 0 0 
}3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 11 12 1 {CSTYLE "" -1 -1 
"" 0 1 0 0 62 0 0 0 0 0 0 0 0 0 0 }1 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "restart;" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 538 "# ADAMS VARIABLE STEP-SIZE PREDICT
OR-CORRECTOR ALGORITHM 5.5\n#\n# To approximate the solution of the in
itial value problem\n#        y' = f( t, y ), a <= t <= b, y(a) = ALPH
A,\n#\n# with local truncation error within a given tolerance:\n#\n# I
NPUT:   endpoints a, b; initial condition ALPHA; tolerance TOL;\n#    \+
      maximum step size HMAX; minimum step size HMIN.\n#\n# OUTPUT:  I
, T(I), W(I), H where at the Ith step W(I) approximates\n#          y(
T(I)) and step size H was used or a message that the\n#          minim
um step size was exceeded." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 141 "alg0
55 := proc() local RK4, OK, A, B, ALPHA, TOL, HMIN, HMAX, FLAG, NAME, \+
OUP, H, DONE, KK, NFLAG, I, TT, WP, WC, SIG, K, J, Q; global W,T,F;" }
}{PARA 0 "> " 0 "" {MPLTEXT 1 0 55 "RK4 := proc(H,X,Y,KK) local K1, K2
, K3, K4; global W,T;" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 1" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 15 "K1 := H*F(X,Y);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 28 "K2 := H*F(X+0.5*H,Y+0.5*K1);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 28 "K3 := H*F(X+0.5*H,Y+0.5*K2);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 20 "K4 := H*F(X+H,Y+K3);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 35 "W[KK] := Y+(K1+2.0*(K2+K3)+K4)/6.0;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 13 "T[KK] := X+H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "en
d;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 76 "printf(`This is the Adams Var
iable Step-size Predictor-Corrector Method\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 58 "printf(`Input the function F(t,y) in terms of t and y
\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "printf(`For example: y-t^
2+1`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "F := scanf(`%a`)[1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "F := unapply(F,t,y);" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 20 "while  OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "print
f(`Input left and right endpoints separated by blank.\\n`);" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 20 "A := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 20 "B := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 14 "if A >= B then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 60 "printf(`L
eft endpoint must be less than right endpoint.\\n`);" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "OK := \+
TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "printf(`Input the initial condi
tion.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "ALPHA := scanf(`%f`)
[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "while OK = FALSE do" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "printf(`Input tolerance.\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "TOL := scanf(`%f`)[1];" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 16 "if TOL <= 0 then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 40 "printf(`Tolerance must be positive.\\n`);" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "O
K := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FAL
SE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "while OK = FALSE do" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 51 "printf(`Input minimum and maximum m
esh spacing  `);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 34 "printf(`separat
ed by a blank.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "HMIN := sca
nf(`%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "HMAX := scanf(`%f`)
[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "if HMIN < HMAX and HMIN > 0
 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 43 "prin
tf(`Minimum mesh spacing must be a  `);" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 47 "printf(`positive real number and less than\\n`);" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 38 "printf(`the maximum mesh spacing.\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if OK = TRUE then" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 37 "printf(`Choice of output method:\\n
`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "printf(`1. Output to screen
\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 35 "printf(`2. Output to text
 file\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "printf(`Please enter
 1 or 2\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "FLAG := scanf(`%d`
)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "if FLAG = 2 then" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 63 "printf(`Input the file name in the form -
 drive:\\\\name.ext\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "printf
(`For example   A:\\\\OUTPUT.DTA\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 23 "NAME := scanf(`%s`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 30 "
OUP := fopen(NAME,WRITE,TEXT);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "el
se" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "OUP := default;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 72 "fpri
ntf(OUP, `ADAMS VARIABLE STEP-SIZE PREDICTOR CORRECTOR METHOD\\n\\n`);
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 67 "fprintf(OUP, `           t     \+
      w           h       sigma\\n`);" }}{PARA 0 "" 0 "" {TEXT -1 6 "S
TEP 2" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 "T[0] := A;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 14 "W[0] := ALPHA;" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 10 "H := HMAX;" }}{PARA 0 "" 0 "" {TEXT -1 55 "OK is used in place
 of FLAG to exit the loop in Step 4." }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 11 "OK := TRUE;" }}{PARA 0 "" 0 "" {TEXT -1 71 "DONE is used in plac
e of last to indicate when last value is calculated" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 14 "DONE := FALSE;" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP
 3" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "for KK from 1 to 3 do" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "RK4(H,T[KK-1],W[KK-1],KK);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "" 0 "" {TEXT -1 40 "
NFLAG indicates the computation from RK4" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 11 "NFLAG := 1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "I :=
 5;" }}{PARA 0 "" 0 "" {TEXT -1 20 "use TT in place of t" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 15 "TT := T[3] + H;" }}{PARA 0 "" 0 "" {TEXT -1 
6 "STEP 4" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "while DONE = FALSE do
" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 5" }}{PARA 0 "" 0 "" {TEXT -1 12 
"perdict W(I)" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 109 "WP := W[I-2]+H*(5
5.0*F(T[I-2],W[I-2])-59.0*F(T[I-3],W[I-3])+37.0*F(T[I-4],W[I-4])-9.0*F
(T[I-5],W[I-5]))/24.0;" }}{PARA 0 "" 0 "" {TEXT -1 12 "correct W(I)" }
}{PARA 0 "> " 0 "" {MPLTEXT 1 0 95 "WC := W[I-2]+H*(9.0*F(TT,WP)+19.0*
F(T[I-2],W[I-2])-5.0*F(T[I-3],W[I-3])+F(T[I-4],W[I-4]))/24.0;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "SIG := 19.0*abs(WC-WP)/(270.0*H);" 
}}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 6" }{MPLTEXT 1 0 0 "" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 18 "if SIG <= TOL then" }}{PARA 0 "" 0 "" {TEXT 
-1 6 "STEP 7" }}{PARA 0 "" 0 "" {TEXT -1 15 "result accepted" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 13 "W[I-1] := WC;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 13 "T[I-1] := TT;" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 8" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if NFLAG = 1 then" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 9 "K := I-3;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 
"KK := I-1;" }}{PARA 0 "" 0 "" {TEXT -1 34 "Previous results are also \+
acceped." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "for J from K to KK do" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 70 "fprintf(OUP, `%12.8f %11.8f %11.8
f %11.8f\\n`, T[J-1], W[J-1], H, SIG);" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 70 "fprintf(OUP, `%12.8f \+
%11.8f %11.8f %11.8f\\n`, T[I-1], W[I-1], H, SIG);" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 4 "else" }}{PARA 0 "" 0 "" {TEXT -1 39 "Previous result
s were already accepted." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 70 "fprintf
(OUP, `%12.8f %11.8f %11.8f %11.8f\\n`, T[I-1], W[I-1], H, SIG);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "" 0 "" {TEXT -1 6 "S
TEP 9" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "if OK = FALSE then" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "DONE := TRUE;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 4 "else" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 10" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 9 "I := I+1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 11 "NFLAG := 0;" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 11" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 38 "if SIG <= 0.1*TOL or T[I-2]+H > B then" }}
{PARA 0 "" 0 "" {TEXT -1 104 "Increase H if more accuracy than require
d has been obtained, or decrease h to include b as a mesh point." }}
{PARA 0 "" 0 "" {TEXT -1 7 "STEP 12" }}{PARA 0 "" 0 "" {TEXT -1 18 "to
 avoid underflow" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "if SIG <= 1.0e-
20 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "Q := 4.0;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "Q :=
 (0.5*TOL/SIG)^(1/4);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}
{PARA 0 "" 0 "" {TEXT -1 7 "STEP 13" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
15 "if Q > 4.0 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "H := 4.0*H;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 11 "H := Q * H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;
" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 14" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 16 "if H > HMAX then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 "H := HM
AX;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "" 0 "" {TEXT 
-1 7 "STEP 15" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "if T[I-2]+4.0*H > \+
B then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "H := 0.25*(B-T[I-2]);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "if H < TOL then" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 13 "DONE := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "
fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 16" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "for KK from I-1 to I+2 do" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 26 "RK4(H,T[KK-1],W[KK-1],KK);" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "NFLAG
 := 1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "I := I+3;" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "" 0 "" {TEXT -1 42 
"FALSE branch for Step 6 - result rejected." }}{PARA 0 "" 0 "" {TEXT 
-1 7 "STEP 17" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "Q := (0.5*TOL/SIG)
^(1/4);" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 18" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 15 "if Q < 0.1 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 
"H := 0.1 * H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 11 "H := Q * H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 3 "fi;" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 19" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 16 "if H < HMIN then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
32 "fprintf(OUP, `HMIN exceeded\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 13 "DONE := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "if T[I-2]+4.0*H > B then" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 21 "H := 0.25*(B-T[I-2]);" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if NFLAG =
 1 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "I := I-3;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "for K
K from I-1 to I+2 do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "RK4(H,T[KK-
1],W[KK-1],KK);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 9 "I := I+3;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
11 "NFLAG := 1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 20" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "TT := T[I-2] + H;" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "" 0 "" {TEXT -1 7 "STEP 21" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "if OUP <> default then" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 12 "fclose(OUP):" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 50 "printf(`Output file %s created sucessfully`,NAME);" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 "RETURN(0);" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 4 "end;" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#>%'alg055G:6
\"69%$RK4G%#OKG%\"AG%\"BG%&ALPHAG%$TOLG%%HMING%%HMAXG%%FLAGG%%NAMEG%$O
UPG%\"HG%%DONEG%#KKG%&NFLAGG%\"IG%#TTG%#WPG%#WCG%$SIGG%\"KG%\"JG%\"QGF
&F&C2>8$:6&F3%\"XG%\"YGF56&%#K1G%#K2G%#K3G%#K4GF&F&C(>FA*&9$\"\"\"-%\"
FG6$9%9&FO>8%*&FNFO-FQ6$,&FSFOFN$\"\"&!\"\",&FTFOFAFenFO>8&*&FNFO-FQ6$
FZ,&FTFOFVFenFO>8'*&FNFO-FQ6$,&FSFOFNFO,&FTFOFjnFOFO>&%\"WG6#9',,FTFOF
A$\"+nmmm;!#5FV$\"+MLLLLF^pFjnF_pF`oF\\p>&%\"TGFioFdoF&6$FhoFcp-%'prin
tfG6#%[oThis~is~the~Adams~Variable~Step-size~Predictor-Corrector~Metho
d|+G-Ffp6#%OInput~the~function~F(t,y)~in~terms~of~t~and~y|+G-Ffp6#%5Fo
r~example:~y-t^2+1G>FQ&-%&scanfG6#%#%aG6#FO>FQ-%(unapplyG6%FQ%\"tG%\"y
G>FV%&FALSEG?(F&FOFOF&/FVF]rC&-Ffp6#%TInput~left~and~right~endpoints~s
eparated~by~blank.|+G>Fjn&-Fbq6#%#%fGFeq>F`oFer@%1F`oFjn-Ffp6#%QLeft~e
ndpoint~must~be~less~than~right~endpoint.|+G>FV%%TRUEG>FVF]r-Ffp6#%>In
put~the~initial~condition.|+G>8(Fer?(F&FOFOF&F_rC%-Ffp6#%2Input~tolera
nce.|+G>8)Fer@%1F]t\"\"!-Ffp6#%=Tolerance~must~be~positive.|+G>FVF`s>F
VF]r?(F&FOFOF&F_rC'-Ffp6#%IInput~minimum~and~maximum~mesh~spacing~~G-F
fp6#%7separated~by~a~blank.|+G>8*Fer>8+Fer@%32F_uFau2F`tF_u>FVF`sC%-Ff
p6#%AMinimum~mesh~spacing~must~be~a~~G-Ffp6#%Dpositive~real~number~and
~less~than|+G-Ffp6#%;the~maximum~mesh~spacing.|+G@$/FVF`sC5-Ffp6#%:Cho
ice~of~output~method:|+G-Ffp6#%51.~Output~to~screen|+G-Ffp6#%82.~Outpu
t~to~text~file|+G-Ffp6#%5Please~enter~1~or~2|+G>8,&-Fbq6#%#%dGFeq@%/Fa
w\"\"#C&-Ffp6#%SInput~the~file~name~in~the~form~-~drive:\\name.ext|+G-
Ffp6#%=For~example~~~A:\\OUTPUT.DTA|+G>8-&-Fbq6#%#%sGFeq>8.-%&fopenG6%
Fax%&WRITEG%%TEXTG>Fgx%(defaultG-%(fprintfG6$Fgx%VADAMS~VARIABLE~STEP-
SIZE~PREDICTOR~CORRECTOR~METHOD|+|+G-F`y6$Fgx%R~~~~~~~~~~~t~~~~~~~~~~~
w~~~~~~~~~~~h~~~~~~~sigma|+G>&Fcp6#F`tFjn>&FhoFhyFfs>8/Fau>FVF`s>80F]r
?(81FOFO\"\"$%%trueG-FA6&F\\z&Fcp6#,&FazFOFgnFO&FhoFgzFaz>82FO>83Ffn>8
4,&&Fcp6#FbzFOF\\zFO?(F&FOFOF&/F_zF]rC'>85,&&Fho6#,&F][lFO!\"#FOFO*&F
\\zFO,*-FQ6$&FcpFj[lFi[l$\"$]&Fgn-FQ6$&Fcp6#,&F][lFO!\"$FO&FhoFg\\l$!$
!fFgn-FQ6$&Fcp6#,&F][lFO!\"%FO&FhoF`]l$\"$q$Fgn-FQ6$&Fcp6#,&F][lFO!\"&
FO&FhoFi]l$!#!*FgnFO$\"+nmmmT!#6>86,&Fi[lFO*&F\\zFO,*-FQ6$F_[lFg[l$\"#
!*FgnF_\\l$\"$!>FgnFd\\l$!#]FgnF]]lFOFOF_^l>87,$*&-%$absG6#,&Fc^lFOFg[
lFgnFOF\\zFgn$\"+Pq.PqFa^l@%1F`_lF]tC&>&Fho6#,&F][lFOFgnFOFc^l>&FcpF^`
lF_[l@%/F[[lFOC&>88Fh\\l>FazF_`l?(89Ff`lFOFazFcz-F`y6(Fgx%=%12.8f~%11.
8f~%11.8f~%11.8f|+G&Fcp6#,&Fi`lFOFgnFO&FhoF^alF\\zF`_l-F`y6(FgxF\\alFa
`lF]`lF\\zF`_lFaal@%F_r>F_zF`sC%>F][l,&F][lFOFOFO>F[[lF`t@$51F`_l,$F]t
$FOFgn2F`o,&Fa\\lFOF\\zFOC)@%1F`_l$\"#5!#@>8:$\"#SFgn>Fgbl,$*$*&F]tFOF
`_lFgn#FO\"\"%$\"+`T'*3%)F^p@%2FhblFgbl>F\\z,$F\\zFhbl>F\\z*&FgblFOF\\
zFO@$2FauF\\z>F\\zFau@$2F`o,&Fa\\lFOF\\zFhblC%>F\\z,&F`o$\"#DF\\\\lFa
\\l$!#DF\\\\l@$2F\\zF]t>F_zF`s>FVF]r?(FazF_`lFO,&F][lFOFhwFOFczFdz>F[[
lFO>F][l,&F][lFOFbzFOC%>FgblF[cl@%2FgblF]bl>F\\z,$F\\zF]bl>F\\zFgcl@%2
F\\zF_uC$-F`y6$Fgx%/HMIN~exceeded|+G>F_zF`sC'@$F\\dl,(F\\zFOF`oFadlFa
\\lFcdl@$Fc`l>F][lFh\\l?(FazF_`lFOFjdlFczFdz>F][lF]el>F[[lFO>F_[lF_bl@
$0FgxF^yC$-%'fcloseG6#Fgx-Ffp6$%COutput~file~%s~created~sucessfullyGFa
x-%'RETURNGFhyF&6%FhoFcpFQ" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
9 "alg055();" }}{PARA 6 "" 1 "" {TEXT -1 130 "This is the Adams Variab
le Step-size Predictor-Corrector Method\nInput the function F(t,y) in \+
terms of t and y\nFor example: y-t^2+1" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 7 "y-t^2+1" }}{PARA 6 "" 1 "" {TEXT -1 50 "Input left and
 right endpoints separated by blank." }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "0 2" }}{PARA 6 "" 1 "" {TEXT -1 28 "Input the initial \+
condition." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 ".5" }}{PARA 6 
"" 1 "" {TEXT -1 16 "Input tolerance." }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 6 ".00001" }}{PARA 6 "" 1 "" {TEXT -1 61 "Input minimum a
nd maximum mesh spacing  separated by a blank." }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 7 ".01 .25" }}{PARA 6 "" 1 "" {TEXT -1 87 "Choice \+
of output method:\n1. Output to screen\n2. Output to text file\nPlease
 enter 1 or 2" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "1" }}{PARA 
6 "" 1 "" {TEXT -1 1081 "ADAMS VARIABLE STEP-SIZE PREDICTOR CORRECTOR \+
METHOD\n\n           t           w           h       sigma\n   .125701
62   .70023173   .12570162   .00000405\n   .25140324   .92309474   .12
570162   .00000405\n   .37710486  1.16738749   .12570162   .00000405\n
   .50280649  1.43174769   .12570162   .00000405\n   .62850811  1.7146
3013   .12570162   .00000460\n   .75420973  2.01428288   .12570162   .
00000521\n   .87991135  2.32871936   .12570162   .00000591\n  1.005612
98  2.65568687   .12570162   .00000670\n  1.13131460  2.99263101   .12
570162   .00000760\n  1.25701622  3.33665521   .12570162   .00000862\n
  1.38271785  3.68447493   .12570162   .00000977\n  1.48572738  3.9697
4089   .10300953   .00000702\n  1.58873692  4.25276739   .10300953   .
00000702\n  1.69174646  4.53100881   .10300953   .00000702\n  1.794755
99  4.80164290   .10300953   .00000702\n  1.89776553  5.06154199   .10
300953   .00000775\n  1.92332415  5.12397135   .02555861   .00000004\n
  1.94888276  5.18547178   .02555861   .00000004\n  1.97444138  5.2459
8540   .02555861   .00000004\n  2.00000000  5.30545285   .02555861   .
00000004" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"!" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 0 "" }}}}{MARK "1 172 0" 4 }{VIEWOPTS 1 1 0 1 1 
1803 }
