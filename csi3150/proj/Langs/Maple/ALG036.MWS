{VERSION 2 3 "IBM INTEL NT" "2.3" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 0 128 0 128 1 0 1 0 
0 1 0 0 0 0 }{CSTYLE "2D Math" -1 2 "Times" 0 1 186 136 0 0 0 0 2 0 0 
0 0 0 0 }{CSTYLE "2D Output" 2 20 "" 0 0 0 128 128 1 0 0 0 0 0 0 0 0 
0 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 
1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 0 }1 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 
32 32 32 0 0 0 0 0 0 0 2 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }
{PSTYLE "Maple Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 152 0 0 0 0 
0 0 0 0 0 0 }3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 11 12 1 
{CSTYLE "" -1 -1 "" 0 1 201 136 176 0 0 0 0 0 0 0 0 0 0 }1 0 0 -1 -1 
-1 0 0 0 0 0 0 -1 0 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "restart;" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 718 "# BEZIER CURVE ALGORITHM 3.6\n#\n#
 To construct the cubic Bezier curves C0, ..., Cn-1 in\n# parameter fo
rm, where Ci is represented by\n#\n# (xi(t),yi(t)) = ( a0(i) + a1(i)*t
 + a2(i)*t^2 + a3(i)*t^3,\n#                   b0(i) + b1(i)*t + b2(i)
*t^2 + b3(i)*t^3)\n#\n# for 0 <= t <= 1 as determined by the left endp
oint (x(i),y(i)),\n# left guidepoint (x+(i),y+(i)), right endpoint (x(
i+1),y(i+1)) and\n# right guidepoint (x-(i+1),y-(i+1)) for each i = 0,
 1, ... , n-1;\n#\n# INPUT  n, ( (x(i),y(i)), i = 0,...,n ),\n#       \+
    ( (x+(i),y+(i)), i = 0,...,n-1 ),\n#           ( (x-(i),y-(i)), i \+
= 1,...,n ).\n#\n# OUTPUT coefficients ( a0(i), a1(i), a2(i), a3(i),\n
#                       b0(i), b1(i), b2(i), b3(i), i = 0, ... , n-1 )
." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 115 "alg036 := proc() local OK, FL
AG, N, X, Y, XPL, YPL, I, XMI, YMI, A, NAME, INP, OUP, A0, B0, A1, B1,
 A2, B2, A3, B3;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 48 "printf(`This is
 the Bezier Curve Algorithm.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
12 "OK := FALSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "while OK = FALS
E do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "printf(`Choice of input met
hod:\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 50 "printf(`1. Input entr
y by entry from keyboard\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 43 "p
rintf(`2. Input data from a text file\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 33 "printf(`Choose 1 or 2 please\\n`);" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 23 "FLAG := scanf(`%d`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 28 "if FLAG = 1 or FLAG = 2 then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 16 "if FLAG = 1 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
12 "OK := FALSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "while OK = FALS
E do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "printf(`Input n\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "N := scanf(`%d`)[1];" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 13 "if N > 0 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 40 "printf(`Input \+
X[0],Y[0],X+[0],Y+[0]\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "prin
tf(`separated by a space\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "X
[0] := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "Y[0] := s
canf(`%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "XPL[0] := scanf(`
%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "YPL[0] := scanf(`%f`)[1
];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "for I from 1 to N-1 do" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "printf(`Input X(%d),Y(%d)\\n`, I, I
);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "printf(`separated by space\\n
`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "X[I] := scanf(`%f`)[1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "Y[I] := scanf(`%f`)[1];" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 38 "printf(`Input X-(%d),Y-(%d)\\n`, I, I);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "printf(`separated by space\\n`);" }
}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "XMI[I-1] := scanf(`%f`)[1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "YMI[I-1] := scanf(`%f`)[1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 38 "printf(`Input X+(%d),Y+(%d)\\n`, I,
 I);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "printf(`separated by space
\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "XPL[I] := scanf(`%f`)[1];
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "YPL[I] := scanf(`%f`)[1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 40 "printf(`Input X[n],Y[n],X-[n],Y-[n]\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 33 "printf(`separated by a space\\n`);" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 23 "X[N] := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 23 "Y[N] := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 27 "XMI[N-1] := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 27 "YMI[N-1] := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 46 "printf(`Num
ber must be a positive integer\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "if FLAG = \+
2 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 70 "printf(`Has a text file b
een created with the data as follows ?\\n\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 43 "printf(`X[0]    Y[0]    X+[0]    Y+[0]\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 61 "printf(`X[1]    Y[1]    X-[1]    Y-
[1]    X+[1]    Y+[1]\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "prin
tf(`...\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "printf(`X[n-1]  Y[
n-1]  X-[n-1]  Y-[n-1]  X+[n-1]  Y+[n-1]\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 45 "printf(`X[n]    Y[n]    X-[n]    Y-[n]\\n\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "printf(`Enter Y or N\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "A := scanf(`\\n%c`)[1];" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 22 "if A = Y or A = y then" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 45 "printf(`Input the file name in the form - `);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "printf(`drive:\\\\name.ext\\n`);" }
}{PARA 0 "> " 0 "" {MPLTEXT 1 0 40 "printf(`For example:   A:\\\\DATA.
DTA\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "NAME := scanf(`%s`)[1]
;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "INP := fopen(NAME,READ,TEXT);
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 19 "while OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 20 "printf(`Input n\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "N \+
:= scanf(`\\n%d`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "if N > 0 t
hen" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 29 "X[0] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 29 "Y[0] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 31 "XPL[0] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 31 "YPL[0] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 22 "for I from 1 to N-1 do" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 29 "X[I] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 29 "Y[I] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 33 "XMI[I-1] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 33 "YMI[I-1] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 31 "XPL[I] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 31 "YPL[I] := fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "X[N] :=
 fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "Y[N] := f
scanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "XMI[N-1] :=
 fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "YMI[N-1] \+
:= fscanf(INP, `%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "fclose(
INP);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 46 "printf(`Number must be a positive integer\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 55 "printf(`Please create the input file as indicated.
\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 54 "printf(`The program will \+
end so the input file can `);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "pr
intf(`be created.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FA
LSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if OK = TRUE
 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 38 "printf(`Select output dest
ination\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "printf(`1. Screen
\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "printf(`2. Text file\\n`)
;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "printf(`Enter 1 or 2\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "FLAG := scanf(`%d`)[1];" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 16 "if FLAG = 2 then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 63 "printf(`Input the file name in the form - drive:\\\\n
ame.ext\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 42 "printf(`For exampl
e:   A:\\\\OUTPUT.DTA\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "NAME
 := scanf(`%s`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 30 "OUP := fopen
(NAME,WRITE,TEXT);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 15 "OUP := default;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 43 "fprintf(OUP,
 `BEZIER CURVE ALGORITHM\\n\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
65 "fprintf(OUP, `          A0          A1          A2          A3`);
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 37 "fprintf(OUP,`  on the first lin
e\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 65 "fprintf(OUP, `          \+
B0          B1          B2          B3`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 38 "fprintf(OUP,`  on the second line\\n`);" }}{PARA 0 "
" 0 "" {TEXT -1 5 "STEP1" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "for I f
rom 0 to N-1 do" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 2" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 14 "A0[I] := X[I];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 14 "B0[I] := Y[I];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "A1[I] := 3*
(XPL[I] - X[I]);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "B1[I] := 3*(YPL
[I] - Y[I]);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 34 "A2[I] := 3*(X[I]+XM
I[I]-2*XPL[I]);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 34 "B2[I] := 3*(Y[I]
+YMI[I]-2*YPL[I]);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 39 "A3[I] := X[I+
1]-X[I]+3*XPL[I]-3*XMI[I];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 39 "B3[I]
 := Y[I+1]-Y[I]+3*YPL[I]-3*YMI[I];" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP
 3" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 74 "fprintf(OUP,` %11.6f %11.6f %
11.6f %11.6f\\n`, A0[I], A1[I], A2[I], A3[I]);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 74 "fprintf(OUP,` %11.6f %11.6f %11.6f %11.6f\\n`, B0[I],
 B1[I], B2[I], B3[I]);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "fprintf(O
UP, `\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 22 "if OUP <> default then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 12 "fclose(OUP);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 50 "pr
intf(`Output file %s created sucessfully`,NAME);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 
0 "" 0 "" {TEXT -1 6 "STEP 4" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 "RET
URN(0);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "end;" }}{PARA 12 "" 1 "" 
{XPPMATH 20 "6#>%'alg036G:6\"68%#OKG%%FLAGG%\"NG%\"XG%\"YG%$XPLG%$YPLG
%\"IG%$XMIG%$YMIG%\"AG%%NAMEG%$INPG%$OUPG%#A0G%#B0G%#A1G%#B1G%#A2G%#B2
G%#A3G%#B3GF&F&C)-%'printfG6#%EThis~is~the~Bezier~Curve~Algorithm.|+G>
8$%&FALSEG?(F&\"\"\"FGF&/FDFEC(-F@6#%9Choice~of~input~method:|+G-F@6#%
G1.~Input~entry~by~entry~from~keyboard|+G-F@6#%@2.~Input~data~from~a~t
ext~file|+G-F@6#%6Choose~1~or~2~please|+G>8%&-%&scanfG6#%#%dG6#FG@$5/F
WFG/FW\"\"#>FD%%TRUEG@$FjnC$>FDFE?(F&FGFGF&FHC%-F@6#%)Input~n|+G>8&FX@
%2\"\"!FhoC0>FDF^o-F@6#%=Input~X[0],Y[0],X+[0],Y+[0]|+G-F@6#%6separate
d~by~a~space|+G>&8'6#F[p&-FZ6#%#%fGFgn>&8(FgpFhp>&8)FgpFhp>&8*FgpFhp?(
8+FGFG,&FhoFG!\"\"FG%%trueGC.-F@6%%3Input~X(%d),Y(%d)|+GFfqFfq-F@6#%4s
eparated~by~space|+G>&Ffp6#FfqFhp>&F^qFcrFhp-F@6%%5Input~X-(%d),Y-(%d)
|+GFfqFfqF^r>&8,6#,&FfqFGFhqFGFhp>&8-F\\sFhp-F@6%%5Input~X+(%d),Y+(%d)
|+GFfqFfqF^r>&FaqFcrFhp>&FdqFcrFhp-F@6#%=Input~X[n],Y[n],X-[n],Y-[n]|+
GFap>&Ffp6#FhoFhp>&F^qF]tFhp>&F[s6#FgqFhp>&F`sFbtFhp-F@6#%CNumber~must
~be~a~positive~integer|+G@$F[oC+-F@6#%ZHas~a~text~file~been~created~wi
th~the~data~as~follows~?|+|+G-F@6#%@X[0]~~~~Y[0]~~~~X+[0]~~~~Y+[0]|+G-
F@6#%RX[1]~~~~Y[1]~~~~X-[1]~~~~Y-[1]~~~~X+[1]~~~~Y+[1]|+G-F@6#%%...|+G
-F@6#%TX[n-1]~~Y[n-1]~~X-[n-1]~~Y-[n-1]~~X+[n-1]~~Y+[n-1]|+G-F@6#%AX[n
]~~~~Y[n]~~~~X-[n]~~~~Y-[n]|+|+G-F@6#%.Enter~Y~or~N|+G>8.&-FZ6#%$|+%cG
Fgn@%5/F`vF^q/F`v%\"yGC)-F@6#%CInput~the~file~name~in~the~form~-~G-F@6
#%1drive:\\name.ext|+G-F@6#%<For~example:~~~A:\\DATA.DTA|+G>8/&-FZ6#%#
%sGFgn>80-%&fopenG6%Few%%READG%%TEXTG>FDFE?(F&FGFGF&FHC%Fdo>Fho&-FZ6#%
$|+%dGFgn@%FjoC->FDF^o>Fep&-%'fscanfG6$F[xF[qFgn>F]qF]y>F`qF]y>FcqF]y?
(FfqFGFGFgqFiqC(>FbrF]y>FerF]y>FjrF]y>F_sF]y>FesF]y>FgsF]y>F\\tF]y>F_t
F]y>FatF]y>FdtF]y-%'fcloseG6#F[xFetC&-F@6#%LPlease~create~the~input~fi
le~as~indicated.|+G-F@6#%LThe~program~will~end~so~the~input~file~can~G
-F@6#%-be~created.|+G>FDFE@$/FDF^oC/-F@6#%;Select~output~destination|+
G-F@6#%+1.~Screen|+G-F@6#%.2.~Text~file|+G-F@6#%.Enter~1~or~2|+G>FWFX@
%F[oC&-F@6#%SInput~the~file~name~in~the~form~-~drive:\\name.ext|+G-F@6
#%>For~example:~~~A:\\OUTPUT.DTA|+G>FewFfw>81-F]x6%Few%&WRITEGF`x>Fh\\
l%(defaultG-%(fprintfG6$Fh\\l%9BEZIER~CURVE~ALGORITHM|+|+G-F_]l6$Fh\\l
%Q~~~~~~~~~~A0~~~~~~~~~~A1~~~~~~~~~~A2~~~~~~~~~~A3G-F_]l6$Fh\\l%5~~on~
the~first~line|+G-F_]l6$Fh\\l%Q~~~~~~~~~~B0~~~~~~~~~~B1~~~~~~~~~~B2~~~
~~~~~~~B3G-F_]l6$Fh\\l%6~~on~the~second~line|+G?(FfqF[pFGFgqFiqC->&82F
crFbr>&83FcrFer>&84Fcr,&Fes\"\"$Fbr!\"$>&85Fcr,&FgsFj^lFerF[_l>&86Fcr,
(FbrFj^l&F[sFcrFj^lFes!\"'>&87Fcr,(FerFj^l&F`sFcrFj^lFgsFe_l>&88Fcr,*&
Ffp6#,&FfqFGFGFGFGFbrFhqFesFj^lFd_lF[_l>&89Fcr,*&F^qF``lFGFerFhqFgsFj^
lFj_lF[_l-F_]l6(Fh\\l%>~%11.6f~%11.6f~%11.6f~%11.6f|+GFa^lFg^lFa_lF\\`
l-F_]l6(Fh\\lFi`lFd^lF]_lFg_lFc`l-F_]l6$Fh\\l%\"|+G@$0Fh\\lF]]lC$-Faz6
#Fh\\l-F@6$%COutput~file~%s~created~sucessfullyGFew-%'RETURNGFgpF&F&" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "alg036();" }}{PARA 6 "" 1 
"" {TEXT -1 149 "This is the Bezier Curve Algorithm.\nChoice of input \+
method:\n1. Input entry by entry from keyboard\n2. Input data from a t
ext file\nChoose 1 or 2 please" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 1 "2" }}{PARA 6 "" 1 "" {TEXT -1 236 "Has a text file been created
 with the data as follows ?\n\nX[0]    Y[0]    X+[0]    Y+[0]\nX[1]   \+
 Y[1]    X-[1]    Y-[1]    X+[1]    Y+[1]\n...\nX[n-1]  Y[n-1]  X-[n-1
]  Y-[n-1]  X+[n-1]  Y+[n-1]\nX[n]    Y[n]    X-[n]    Y-[n]\n\nEnter \+
Y or N" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "y" }}{PARA 6 "" 1 
"" {TEXT -1 76 "Input the file name in the form - drive:\\name.ext\nFo
r example:   A:\\DATA.DTA" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
18 "c:\\data\\alg036.dta" }}{PARA 6 "" 1 "" {TEXT -1 7 "Input n" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "2" }}{PARA 6 "" 1 "" {TEXT 
-1 61 "Select output destination\n1. Screen\n2. Text file\nEnter 1 or \+
2" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "1" }}{PARA 6 "" 1 "" 
{TEXT -1 352 "BEZIER CURVE ALGORITHM\n\n          A0          A1      \+
    A2          A3  on the first line\n          B0          B1       \+
   B2          B3  on the second line\n    0.000000    1.500000    7.5
00000  -5.000000\n    0.000000     .750000   19.500000 -14.250000\n\n \+
   4.000000    1.500000    6.000000  -5.500000\n    6.000000  -3.00000
0  -6.000000    4.000000" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"!" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}}{MARK "5 0 0" 18 }
{VIEWOPTS 1 1 0 1 1 1803 }
