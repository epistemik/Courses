{VERSION 2 3 "IBM INTEL NT" "2.3" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 0 128 0 128 1 0 1 0 
0 1 0 0 0 0 }{CSTYLE "2D Math" -1 2 "Times" 0 1 186 136 0 0 0 0 2 0 0 
0 0 0 0 }{CSTYLE "2D Output" 2 20 "" 0 0 0 128 128 1 0 0 0 0 0 0 0 0 
0 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 
1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 0 }1 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 0 
0 0 0 0 0 0 0 0 0 2 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Map
le Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 152 0 0 0 0 0 0 0 0 0 0 
}3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 11 12 1 {CSTYLE "" -1 -1 
"" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 }1 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "restart;" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 459 "# EXTRAPOLATION ALGORITHM 5.6\n#\n
# To approximate the solution of the initial value problem:\n#        \+
       y' = f(t,y), a <= t <= b, y(a) = ALPHA,\n# with local truncatio
n error within a given tolerance:\n#\n# INPUT:   endpoints a,b; initia
l condition ALPHA; tolerance TOL;\n#          maximum stepsize HMAX; m
inimum stepsize HMIN.\n#\n# OUTPUT:  T, W, H where W approximates y(T)
 and stepsize H was\n#          used or a message that minimum stepsiz
e was exceeded." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 144 "alg056 := proc(
) local F, OK, A, B, ALPHA, TOL, HMIN, HMAX, FLAG, NAME, OUP, NK, J, I
, T0, W0, H, DONE, Q, K, NFLAG, HK, T, W2, W3, M, W1, Y, V;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 40 "printf(`This is Gragg Extrapolation\\n`);
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 58 "printf(`Input the function F(t,
y) in terms of t and y\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "pri
ntf(`For example: y-t^2+1`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "F :
= scanf(`%a`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "F := unapply(F
,t,y);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 20 "while  OK = FALSE do" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 63 "printf(`Input left and right endpoints separated by b
lank.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "A := scanf(`%f`)[1];
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "B := scanf(`%f`)[1];" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 14 "if A >= B then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 60 "printf(`Left endpoint must be less than right endpoin
t.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi
;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "pr
intf(`Input the initial condition.\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 24 "ALPHA := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 19 "while OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 29 "printf(`Input tolerance.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 22 "TOL := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "if \+
TOL <= 0 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 40 "printf(`Tolerance \+
must be positive.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 19 "while OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 51 "printf(`Input minimum and maximum mesh spacing  `);" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 34 "printf(`separated by a blank.\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "HMIN := scanf(`%f`)[1];" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 23 "HMAX := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 32 "if HMIN < HMAX and HMIN > 0 then" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "e
lse" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 43 "printf(`Minimum mesh spacing
 must be a  `);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "printf(`positive
 real number and less than\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 38 
"printf(`the maximum mesh spacing.\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 17 "if OK = TRUE then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 37 "printf(`Choice of output method:\\n`);" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 32 "printf(`1. Output to screen\\n`);" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 35 "printf(`2. Output to text file\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "printf(`Please enter 1 or 2\\n`);" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "FLAG := scanf(`%d`)[1];" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 16 "if FLAG = 2 then" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 63 "printf(`Input the file name in the form - drive:\\\\n
ame.ext\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "printf(`For exampl
e   A:\\\\OUTPUT.DTA\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "NAME \+
:= scanf(`%s`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 30 "OUP := fopen(
NAME,WRITE,TEXT);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 15 "OUP := default;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 40 "fprintf(OUP,
 `GRAGG EXTRAPOLATION\\n\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 62 "f
printf(OUP, `           T           W           H      K\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "# STEP 1 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 11 "NK[0] := 2;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "NK[
1] := 4;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "for J from 1 to 3 do" }
}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "I := 2*J;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 21 "NK[I] := 3*NK[I-1]/2;" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 21 "NK[I+1] := 2*NK[I-1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "# STEP 2 */" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 8 "T0 := A;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "W0 :=
 ALPHA;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 "H := HMAX;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 63 "#  DONE is used in place of FLAG to exit the \+
loop in Step 4  */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 14 "DONE := FALSE
;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "# STEP 3 */" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 20 "for I from 1 to 7 do" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 20 "for J from 1 to I do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 50 "Q[I-1,J-1] := (NK[I]*1/NK[J-1])*(NK[I]*1/NK[J-1]);" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "# STEP 4 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 21 "while DONE = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 11 "# STEP 5 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "K := 1;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 54 "# when desired accuracy achieved, N
FLAG is set to 1 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "NFLAG := 0;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "# STEP 6 */" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 29 "while K <= 8 and NFLAG = 0 do" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 11 "# STEP 7 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "HK \+
:= H/NK[K-1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "T := T0;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 9 "W2 := W0;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 20 "# Euler first step *" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "W3 :=
 W2+HK*F(T, W2);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "T := T0+HK;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "# STEP 8 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 15 "M := NK[K-1]-1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 
"for J from 1 to M do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "W1 := W2;" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "W2 := W3;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 20 "# midpoint method */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 23 "W3 := W1+2*HK*F(T, W2);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "T \+
:= T0+(J+1)*HK;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 11 "# STEP 9 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 42 "# endpoint correction to compute Y(K,1) */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 30 "Y[K] := (W3+W2+HK*F(T, W3))/2;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 12 "# STEP 10 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "# \+
NOTE: Y(K-1)=Y(K-1,1),Y(K-2)=Y(K-1,2),..., */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 53 "# Y(1)=Y(K-1,K-1) since only previous row of table */
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 14 "# is saved  */" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 14 "if K >= 2 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 12 "# STEP 11 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "J := K;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "#  save Y(K-1,K-1)  */" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 10 "V := Y[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 12 "# STEP 12 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "while J >= 2 \+
do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "# extrapolation to compute */
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "# Y(J-1) := Y(K,K-J+2) */" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "Y[J-1] := Y[J]+(Y[J]-Y[J-1])/(Q[K-2
,J-2]-1);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "J := J-1;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# ST
EP 13 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "if abs(Y[1] - V) <= TOL
 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "NFLAG := 1;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "# Y(1
) accepted as new w */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# STEP 14 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 9 "K := K+1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# STEP 15 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 9 "K := K-1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# STEP
 16 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if NFLAG = 0 then" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# STEP 17 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 41 "# new value for w rejected, decrease H */" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 9 "H := H/2;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
12 "# STEP 18 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "if H < HMIN the
n" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "fprintf(OUP, `HMIN exceeded\\n
`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "DONE := TRUE;" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# STEP 19 */" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 29 "# new value for w accepted */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 11 "W0 := Y[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "T0 \+
:= T0 + H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 57 "fprintf(OUP, `%12.8f \+
%11.8f %11.8f %6d\\n`, T0, W0, H, K);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 12 "# STEP 20 */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "# increase H \+
if possible */" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "if T0 >= B then" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "DONE := TRUE;" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "if T0 + H
 > B then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "H := B - T0;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 14 
"if K <= 3 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "H := 2*H;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 16 "if H > HMAX then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
9 "H := H/2;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "# STEP 21 */" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 22 "if OUP <> default then" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 12 "fclose(OUP):" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 50 "printf(`Out
put file %s created sucessfully`,NAME);" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 10 "RETURN(0);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "en
d;" }}{PARA 12 "" 1 "" {XPPMATH 20 "6#>%'alg056G:6\"6?%\"FG%#OKG%\"AG%
\"BG%&ALPHAG%$TOLG%%HMING%%HMAXG%%FLAGG%%NAMEG%$OUPG%#NKG%\"JG%\"IG%#T
0G%#W0G%\"HG%%DONEG%\"QG%\"KG%&NFLAGG%#HKG%\"TG%#W2G%#W3G%\"MG%#W1G%\"
YG%\"VGF&F&C1-%'printfG6#%=This~is~Gragg~Extrapolation|+G-FG6#%OInput~
the~function~F(t,y)~in~terms~of~t~and~y|+G-FG6#%5For~example:~y-t^2+1G
>8$&-%&scanfG6#%#%aG6#\"\"\">FQ-%(unapplyG6%FQ%\"tG%\"yG>8%%&FALSEG?(F
&FXFXF&/FjnF[oC&-FG6#%TInput~left~and~right~endpoints~separated~by~bla
nk.|+G>8&&-FT6#%#%fGFW>8'Fdo@%1FioFco-FG6#%QLeft~endpoint~must~be~less
~than~right~endpoint.|+G>Fjn%%TRUEG>FjnF[o-FG6#%>Input~the~initial~con
dition.|+G>8(Fdo?(F&FXFXF&F]oC%-FG6#%2Input~tolerance.|+G>8)Fdo@%1F]q
\"\"!-FG6#%=Tolerance~must~be~positive.|+G>FjnF`p>FjnF[o?(F&FXFXF&F]oC
'-FG6#%IInput~minimum~and~maximum~mesh~spacing~~G-FG6#%7separated~by~a
~blank.|+G>8*Fdo>8+Fdo@%32F_rFar2F`qF_r>FjnF`pC%-FG6#%AMinimum~mesh~sp
acing~must~be~a~~G-FG6#%Dpositive~real~number~and~less~than|+G-FG6#%;t
he~maximum~mesh~spacing.|+G@$/FjnF`pC4-FG6#%:Choice~of~output~method:|
+G-FG6#%51.~Output~to~screen|+G-FG6#%82.~Output~to~text~file|+G-FG6#%5
Please~enter~1~or~2|+G>8,&-FT6#%#%dGFW@%/Fat\"\"#C&-FG6#%SInput~the~fi
le~name~in~the~form~-~drive:\\name.ext|+G-FG6#%=For~example~~~A:\\OUTP
UT.DTA|+G>8-&-FT6#%#%sGFW>8.-%&fopenG6%Fau%&WRITEG%%TEXTG>Fgu%(default
G-%(fprintfG6$Fgu%6GRAGG~EXTRAPOLATION|+|+G-F`v6$Fgu%M~~~~~~~~~~~T~~~~
~~~~~~~W~~~~~~~~~~~H~~~~~~K|+G>&8/6#F`qFht>&FhvFW\"\"%?(80FXFX\"\"$%%t
rueGC%>81,$F^wFht>&Fhv6#Fcw,$&Fhv6#,&FcwFX!\"\"FX#F_wFht>&Fhv6#,&FcwFX
FXFX,$FiwFht>82Fco>83Ffp>84Far>85F[o?(FcwFXFX\"\"(F`w?(F^wFXFXFcwF`w>&
866$F[x,&F^wFXF\\xFX*&FfwFht&Fhv6#Fby!\"#?(F&FXFXF&/FjxF[oC'>87FX>88F`
q?(F&FXFXF&31F[z\"\")/F]zF`qC,>89*&FhxFX&Fhv6#,&F[zFXF\\xFXF\\x>8:Fdx>
8;Ffx>8<,&F][lFX*&FezFX-FQ6$F[[lF][lFXFX>F[[l,&FdxFXFezFX>8=,&FgzFXF\\
xFX?(F^wFXFXFg[lF`wC&>8>F][l>F][lF_[l>F_[l,&F\\\\lFXFa[lFht>F[[l,&FdxF
X*&,&F^wFXFXFXFXFezFXFX>&8?6#F[z,(F_[l#FXFhtF][lFi\\l*&FezFX-FQ6$F[[lF
_[lFXFi\\l@$1FhtF[zC&>F^wF[z>8@&Ff\\lFW?(F&FXFXF&1FhtF^wC$>&Ff\\lFey,&
&Ff\\l6#F^wFX*&,&Fj]lFXFh]lF\\xFX,&&F`y6$,&F[zFXFfyFX,&F^wFXFfyFXFXF\\
xFXF\\xFX>F^wFby@$1-%$absG6#,&Fc]lFXFb]lF\\xF]q>F]zFX>F[z,&F[zFXFXFX>F
[zFiz@%FbzC$>Fhx,$FhxFi\\l@$2FhxF_rC$-F`v6$Fgu%/HMIN~exceeded|+G>FjxF`
pC'>FfxFc]l>Fdx,&FdxFXFhxFX-F`v6(Fgu%:%12.8f~%11.8f~%11.8f~%6d|+GFdxFf
xFhxF[z@%1FioFdx>FjxF`p@%2FioF\\`l>Fhx,&FioFXFdxF\\x@$1F[zF_w>Fhx,$Fhx
Fht@$2FarFhx>FhxFa_l@$0FguF^vC$-%'fcloseG6#Fgu-FG6$%COutput~file~%s~cr
eated~sucessfullyGFau-%'RETURNGFivF&F&" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 9 "alg056();" }}{PARA 6 "" 1 "" {TEXT -1 94 "This is Grag
g Extrapolation\nInput the function F(t,y) in terms of t and y\nFor ex
ample: y-t^2+1" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "y-t^2+1" }
}{PARA 6 "" 1 "" {TEXT -1 50 "Input left and right endpoints separated
 by blank." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "0 2" }}{PARA 
6 "" 1 "" {TEXT -1 28 "Input the initial condition." }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 2 ".5" }}{PARA 6 "" 1 "" {TEXT -1 16 "Input t
olerance." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 6 ".00001" }}
{PARA 6 "" 1 "" {TEXT -1 61 "Input minimum and maximum mesh spacing  s
eparated by a blank." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 7 ".01 \+
.25" }}{PARA 6 "" 1 "" {TEXT -1 87 "Choice of output method:\n1. Outpu
t to screen\n2. Output to text file\nPlease enter 1 or 2" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "1" }}{PARA 6 "" 1 "" {TEXT -1 416 "G
RAGG EXTRAPOLATION\n\n           T           W           H      K\n   \+
.25000000   .92048728   .25000000      3\n   .50000000  1.42563935   .
25000000      3\n   .75000000  2.00399998   .25000000      3\n  1.0000
0000  2.64085907   .25000000      3\n  1.25000000  3.31732851   .25000
000      3\n  1.50000000  4.00915545   .25000000      3\n  1.75000000 \+
 4.68519865   .25000000      3\n  2.00000000  5.30547195   .25000000  \+
    3" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"!" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 0 "" }}}}{MARK "9 0 0" 0 }{VIEWOPTS 1 1 0 1 1 
1803 }
