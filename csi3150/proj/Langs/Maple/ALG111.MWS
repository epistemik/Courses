{VERSION 2 3 "IBM INTEL NT" "2.3" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 0 128 0 128 1 0 1 0 
0 1 0 0 0 0 }{CSTYLE "2D Math" -1 2 "Times" 0 1 186 136 0 0 0 0 2 0 0 
0 0 0 0 }{CSTYLE "2D Output" 2 20 "" 0 0 0 128 128 1 0 0 0 0 0 0 0 0 
0 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 
1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 0 }1 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 
16 0 0 0 0 0 0 0 0 0 2 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "
Maple Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 152 0 0 0 0 0 0 0 0 
0 0 }3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 11 12 1 {CSTYLE "" 
-1 -1 "" 0 1 0 0 224 0 0 0 0 0 0 0 0 0 0 }1 0 0 -1 -1 -1 0 0 0 0 0 0 
-1 0 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "restart;" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 357 "# LINEAR SHOOTING ALGORITHM 11.1\n
#\n# To approximate the solution of the boundary-value problem\n#\n# -
Y'' + P(X)Y' + Q(X)Y + R(X) = 0, A<=X<=B, Y(A)=ALPHA, Y(B)=BETA:\n#\n#
\n# INPUT: Endpoints A,B; boundary conditions ALPHA, BETA; number of\n
#        subintervals N.\n#\n# OUTPUT: Approximations W(1,I) to Y(X(I)
); W(2,I) to Y'(X(I))\n#         for each I=0,1,...,N." }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 159 "alg111 := proc() local P, Q, R, OK, A, B, ALP
HA, BETA, N, FLAG, NAME, OUP, H, U1, U2, V1, V2, I, X, T, K11, K12, K2
1, K22, K31, K32, K41, K42, U, V, W1, Z, W2;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 48 "printf(`This is the Linear Shooting Method.\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 88 "printf(`Input the functions P(X), Q
(X) and R(X) in terms of x, separated by spaces.\\n`);" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 56 "printf(`For example: -2/x 2/(x^2) sin(log(x))/
(x^2)\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "P := scanf(`%a`)[1];
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "Q := scanf(`%a`)[1];" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 20 "R := scanf(`%a`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 18 "P := unapply(P,x);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 18 "Q := unapply(Q,x);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "R := un
apply(R,x);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "while OK = FALSE do" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 63 "printf(`Input left and right endpoints separat
ed by blank.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "A := scanf(`%
f`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "B := scanf(`%f`)[1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 14 "if A >= B then" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 60 "printf(`Left endpoint must be less than right endpo
int.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 
"fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 33 "printf(`Input Y(  %.10e).\\n`, A);" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 24 "ALPHA := scanf(`%a`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 33 "printf(`Input Y(  %.10e).\\n`, B);" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 23 "BETA := scanf(`%a`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "wh
ile OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 69 "printf(`Input \+
a positive integer for the number of subintervals.\\n`);" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 20 "N := scanf(`%d`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 14 "if N <= 0 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "
printf(`Number must be a positive integer.\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "OK := TRUE;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if OK = TRUE
 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 37 "printf(`Choice of output m
ethod:\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "printf(`1. Output t
o screen\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 35 "printf(`2. Output
 to text File\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "printf(`Plea
se enter 1 or 2.\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "FLAG := s
canf(`%d`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "if FLAG = 2 then
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "printf(`Input the file name in \+
the form - drive:\\\\name.ext\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
40 "printf(`for example  A:\\\\OUTPUT.DTA\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 23 "NAME := scanf(`%s`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 30 "OUP := fopen(NAME,WRITE,TEXT);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "OUP := defa
ult;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 43 "fprintf(OUP, `LINEAR SHOOTING METHOD\\n\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 54 "fprintf(OUP, `  I  X(I)        W(1,
I)      W(2,I)\\n`);" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 1" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 13 "H := (B-A)/N;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 12 "U1 := ALPHA;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "U2 \+
:= 0;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "V1 := 0;" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 8 "V2 := 1;" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 2" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "for I from 1 to N do" }}{PARA 0 "" 
0 "" {TEXT -1 6 "STEP 3" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "X := A+(
I-1)*H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "T := X+0.5*H;" }}{PARA 
0 "" 0 "" {TEXT -1 6 "STEP 4" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "K11
 := H*U2;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "K12 := H*(P(X)*U2+Q(X)
*U1+R(X));" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "K21 := H*(U2+0.5*K12)
;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 52 "K22 := H*(P(T)*(U2+0.5*K12)+Q(
T)*(U1+0.5*K11)+R(T));" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "K31 := H*
(U2+0.5*K22);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 52 "K32 := H*(P(T)*(U2
+0.5*K22)+Q(T)*(U1+0.5*K21)+R(T));" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
9 "T := X+H;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "K41 := H*(U2+K32);
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "K42 := H*(P(T)*(U2+K32)+Q(T)*(U
1+K31)+R(T));" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "U1 := U1+(K11+2*(K
21+K31)+K41)/6;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 33 "U2 := U2+(K12+2*
(K22+K32)+K42)/6;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "K11 := H*V2;" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "K12 := H*(P(X)*V2+Q(X)*V1);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "T := X+0.5*H;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 22 "K21 := H*(V2+0.5*K12);" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 47 "K22 := H*(P(T)*(V2+0.5*K12)+Q(T)*(V1+0.5*K11));" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 22 "K31 := H*(V2+0.5*K22);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 47 "K32 := H*(P(T)*(V2+0.5*K22)+Q(T)*(V1+0.5*K21));" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "T := X+H;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 18 "K41 := H*(V2+K32);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
39 "K42 := H*(P(T)*(V2+K32)+Q(T)*(V1+K31));" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 33 "V1 := V1+(K11+2*(K21+K31)+K41)/6;" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 33 "V2 := V2+(K12+2*(K22+K32)+K42)/6;" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 15 "U[0,I-1] := U1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 15 "U[1,I-1] := U2;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "V[0,I-1] :
= V1;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "V[1,I-1] := V2;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 5
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "W1 := ALPHA;" }}{PARA 0 "> " 0 
"" {MPLTEXT 1 0 30 "Z := (BETA-U[0,N-1])/V[0,N-1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 7 "X := A;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "I := 0;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 56 "fprintf(OUP, `%3d %11.8f %11.8f
 %11.8f\\n`, I, X, W1, Z);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "for I
 from 1 to N do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "X := A+I*H;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "W1 := U[0,I-1]+Z*V[0,I-1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "W2 := U[1,I-1]+Z*V[1,I-1];" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 57 "fprintf(OUP, `%3d %11.8f %11.8f %11
.8f\\n`, I, X, W1, W2);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "if OUP <> default then" }}{PARA 0 "
> " 0 "" {MPLTEXT 1 0 12 "fclose(OUP):" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 50 "printf(`Output file %s created sucessfully`,NAME);" }}{PARA 0 
"> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;
" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 7" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 10 "RETURN(0);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "end;" }}{PARA 
12 "" 1 "" {XPPMATH 20 "6#>%'alg111G:6\"6C%\"PG%\"QG%\"RG%#OKG%\"AG%\"
BG%&ALPHAG%%BETAG%\"NG%%FLAGG%%NAMEG%$OUPG%\"HG%#U1G%#U2G%#V1G%#V2G%\"
IG%\"XG%\"TG%$K11G%$K12G%$K21G%$K22G%$K31G%$K32G%$K41G%$K42G%\"UG%\"VG
%#W1G%\"ZG%#W2GF&F&C5-%'printfG6#%EThis~is~the~Linear~Shooting~Method.
|+G-FK6#%goInput~the~functions~P(X),~Q(X)~and~R(X)~in~terms~of~x,~sepa
rated~by~spaces.|+G-FK6#%MFor~example:~-2/x~2/(x^2)~sin(log(x))/(x^2)|
+G>8$&-%&scanfG6#%#%aG6#\"\"\">8%FV>8&FV>FU-%(unapplyG6$FU%\"xG>Fhn-F]
o6$FhnF_o>Fjn-F]o6$FjnF_o>8'%&FALSEG?(F&FfnFfnF&/FgoFhoC&-FK6#%TInput~
left~and~right~endpoints~separated~by~blank.|+G>8(&-FX6#%#%fGFen>8)Fap
@%1FfpF`p-FK6#%QLeft~endpoint~must~be~less~than~right~endpoint.|+G>Fgo
%%TRUEG-FK6$%3Input~Y(~~%.10e).|+GF`p>8*FV-FK6$F`qFfp>8+FV>FgoFho?(F&F
fnFfnF&FjoC%-FK6#%ZInput~a~positive~integer~for~the~number~of~subinter
vals.|+G>8,&-FX6#%#%dGFen@%1F^r\"\"!-FK6#%DNumber~must~be~a~positive~i
nteger.|+G>FgoF]q@$/FgoF]qC7-FK6#%:Choice~of~output~method:|+G-FK6#%51
.~Output~to~screen|+G-FK6#%82.~Output~to~text~File|+G-FK6#%6Please~ent
er~1~or~2.|+G>8-F_r@%/Fjs\"\"#C&-FK6#%SInput~the~file~name~in~the~form
~-~drive:\\name.ext|+G-FK6#%<for~example~~A:\\OUTPUT.DTA|+G>8.&-FX6#%#
%sGFen>8/-%&fopenG6%Fft%&WRITEG%%TEXTG>F\\u%(defaultG-%(fprintfG6$F\\u
%9LINEAR~SHOOTING~METHOD|+|+G-Feu6$F\\u%E~~I~~X(I)~~~~~~~~W(1,I)~~~~~~
W(2,I)|+G>80*&,&FfpFfnF`p!\"\"FfnF^rF_v>81Fbq>82Fer>83Fer>84Ffn?(85Ffn
FfnF^r%%trueGC?>86,&F`pFfn*&,&FivFfnF_vFfnFfnF\\vFfnFfn>87,&F]wFfnF\\v
$\"\"&F_v>88*&F\\vFfnFcvFfn>89*&F\\vFfn,(*&-FU6#F]wFfnFcvFfnFfn*&-FhnF
_xFfnFavFfnFfn-FjnF_xFfnFfn>8:*&F\\vFfn,&FcvFfnFjwFdwFfn>8;*&F\\vFfn,(
*&-FU6#FbwFfnFfxFfnFfn*&-FhnF]yFfn,&FavFfnFgwFdwFfnFfn-FjnF]yFfnFfn>8<
*&F\\vFfn,&FcvFfnFhxFdwFfn>8=*&F\\vFfn,(*&F\\yFfnFeyFfnFfn*&F_yFfn,&Fa
vFfnFdxFdwFfnFfnFayFfnFfn>Fbw,&F]wFfnF\\vFfn>8>*&F\\vFfn,&FcvFfnFgyFfn
Ffn>8?*&F\\vFfn,(*&F\\yFfnFbzFfnFfn*&F_yFfn,&FavFfnFcyFfnFfnFfnFayFfnF
fn>Fav,,FavFfnFgw#Ffn\"\"'Fdx#Ffn\"\"$FcyF^[lF`zF\\[l>Fcv,,FcvFfnFjwF
\\[lFhxF^[lFgyF^[lFdzF\\[l>Fgw*&F\\vFfnFgvFfn>Fjw*&F\\vFfn,&*&F^xFfnFg
vFfnFfn*&FaxFfnFevFfnFfnFfn>FbwFcw>Fdx*&F\\vFfn,&FgvFfnFjwFdwFfn>Fhx*&
F\\vFfn,&*&F\\yFfnF\\\\lFfnFfn*&F_yFfn,&FevFfnFgwFdwFfnFfnFfn>Fcy*&F\\
vFfn,&FgvFfnFhxFdwFfn>Fgy*&F\\vFfn,&*&F\\yFfnFe\\lFfnFfn*&F_yFfn,&FevF
fnFdxFdwFfnFfnFfn>FbwF^z>F`z*&F\\vFfn,&FgvFfnFgyFfnFfn>Fdz*&F\\vFfn,&*
&F\\yFfnF_]lFfnFfn*&F_yFfn,&FevFfnFcyFfnFfnFfnFfn>Fev,,FevFfnFgwF\\[lF
dxF^[lFcyF^[lF`zF\\[l>Fgv,,FgvFfnFjwF\\[lFhxF^[lFgyF^[lFdzF\\[l>&8@6$F
erF`wFav>&F\\^l6$FfnF`wFcv>&8AF]^lFev>&Fc^lF`^lFgv>8BFbq>8C*&,&FfqFfn&
F\\^l6$Fer,&F^rFfnF_vFfnF_vFfn&Fc^lF]_lF_v>F]wF`p>FivFer-Feu6(F\\u%:%3
d~%11.8f~%11.8f~%11.8f|+GFivF]wFg^lFi^l?(FivFfnFfnF^rFjvC&>F]w,&F`pFfn
*&FivFfnF\\vFfnFfn>Fg^l,&F[^lFfn*&Fi^lFfnFb^lFfnFfn>8D,&F_^lFfn*&Fi^lF
fnFe^lFfnFfn-Feu6(F\\uFd_lFivF]wFg^lF^`l@$0F\\uFcuC$-%'fcloseG6#F\\u-F
K6$%COutput~file~%s~created~sucessfullyGFft-%'RETURNG6#FerF&F&" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "alg111();" }}{PARA 6 "" 1 "" 
{TEXT -1 155 "This is the Linear Shooting Method.\nInput the functions
 P(X), Q(X) and R(X) in terms of x, separated by spaces.\nFor example:
 -2/x 2/(x^2) sin(log(x))/(x^2)" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 25 "-2/x 2/x^2 sin(ln(x))/x^2" }}{PARA 6 "" 1 "" {TEXT -1 50 "Inpu
t left and right endpoints separated by blank." }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 3 "1 2" }}{PARA 6 "" 1 "" {TEXT -1 28 "Input Y(  1
.0000000000e+00)." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "1" }}
{PARA 6 "" 1 "" {TEXT -1 28 "Input Y(  2.0000000000e+00)." }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "2" }}{PARA 6 "" 1 "" {TEXT -1 56 "In
put a positive integer for the number of subintervals." }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "10" }}{PARA 6 "" 1 "" {TEXT -1 88 "C
hoice of output method:\n1. Output to screen\n2. Output to text File\n
Please enter 1 or 2." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "1" }
}{PARA 6 "" 1 "" {TEXT -1 499 "LINEAR SHOOTING METHOD\n\n  I  X(I)    \+
    W(1,I)      W(2,I)\n  0  1.00000000  1.00000000   .91762139\n  1  \+
1.10000000  1.09262916   .93528285\n  2  1.20000000  1.18708470   .953
83866\n  3  1.30000000  1.28338226   .97197732\n  4  1.40000000  1.381
44589   .98909652\n  5  1.50000000  1.48115938  1.00495321\n  6  1.600
00000  1.58239244  1.01948769\n  7  1.70000000  1.68501396  1.03273244
\n  8  1.80000000  1.78889853  1.04476394\n  9  1.90000000  1.89392951
  1.05567694\n 10  2.00000000  2.00000000  1.06557076" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#\"\"!" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 
"" }}}}{MARK "9 0 0" 0 }{VIEWOPTS 1 1 0 1 1 1803 }
