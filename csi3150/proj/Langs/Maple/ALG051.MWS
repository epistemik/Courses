{VERSION 2 3 "IBM INTEL NT" "2.3" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 0 128 0 128 1 0 1 0 
0 1 0 0 0 0 }{CSTYLE "2D Math" -1 2 "Times" 0 1 186 136 0 0 0 0 2 0 0 
0 0 0 0 }{CSTYLE "2D Output" 2 20 "" 0 0 0 128 128 1 0 0 0 0 0 0 0 0 
0 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 
1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 0 }1 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 
223 136 184 0 0 0 0 0 0 0 2 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }
{PSTYLE "Maple Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 152 0 0 0 0 
0 0 0 0 0 0 }3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 11 12 1 
{CSTYLE "" -1 -1 "" 0 1 186 136 20 0 0 0 0 0 0 0 0 0 0 }1 0 0 -1 -1 
-1 0 0 0 0 0 0 -1 0 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "restart;" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 312 "# EULER'S ALGORITHM 5.1\n#\n# TO A
PPROXIMATE THE SOLUTION OF THE INITIAL VALUE PROBLEM:\n#            Y'
 = F(T,Y), A<=T<=B, Y(A) = ALPHA,\n# AT N+1 EQUALLY SPACED POINTS IN T
HE INTERVAL [A,B].\n#\n# INPUT:   ENDPOINTS A,B; INITIAL CONDITION ALP
HA; INTEGER N.\n#\n# OUTPUT:  APPROXIMATION W TO Y AT THE (N+1) VALUES
 OF T." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 74 "alg051 := proc() local F,
 OK, A, B, ALPHA, N, FLAG, NAME, OUP, H, T, W, I;" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 36 "printf(`This is Euler's Method.\\n`);" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 58 "printf(`Input the function F(t,y) in terms of
 t and y\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "printf(`For examp
le: y-t^2+1`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "F := scanf(`%a`)[
1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "F := unapply(F,t,y);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 19 "while OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 
0 62 "printf(`Input left and right endpoints separated by blank\\n`);
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "A := scanf(`%f`)[1];" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 20 "B := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "
" {MPLTEXT 1 0 15 "if A >= B then " }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
59 "printf(`Left endpoint must be less than right endpoint\\n`);" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 
1 0 11 "OK := TRUE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 
0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 40 "
printf(`Input the initial condition\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 24 "ALPHA := scanf(`%f`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 12 "OK := FALSE;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "wh
ile OK = FALSE do" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 68 "printf(`Input \+
a positive integer for the number of subintervals\\n`);" }}{PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 20 "N := scanf(`%d`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 14 "if N <= 0 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 46 "
printf(`Number must be a positive integer\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "OK := TRUE;
" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 3 "od;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "if OK = TRUE
 then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 37 "printf(`Choice of output m
ethod:\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "printf(`1. Output t
o screen\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 35 "printf(`2. Output
 to text file\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "printf(`Plea
se enter 1 or 2\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "FLAG := sc
anf(`%d`)[1];" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "if FLAG = 2 then" 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "printf(`Input the file name in th
e form - drive:\\\\name.ext\\n`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
41 "printf(`For example   A:\\\\OUTPUT.DTA\\n`);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 23 "NAME := scanf(`%s`)[1];" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 30 "OUP := fopen(NAME,WRITE,TEXT);" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 4 "else" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "OUP := defa
ult;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 34 "fprintf(OUP, `EULERS METHOD\\n\\n`);" }}{PARA 0 "> " 
0 "" {MPLTEXT 1 0 38 "fprintf(OUP, `    t           w\\n\\n`);" }}
{PARA 0 "" 0 "" {TEXT -1 6 "STEP 1" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
13 "H := (B-A)/N;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "T := A;" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "W := ALPHA;" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 37 "fprintf(OUP, `%5.3f %11.7f\\n`, T, W);" }}{PARA 0 "" 
0 "" {TEXT -1 6 "STEP 2" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "for I fr
om 1 to N do" }}{PARA 0 "" 0 "" {TEXT -1 6 "STEP 3" }}{PARA 0 "" 0 "" 
{TEXT -1 12 "Compute W(I)" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "W := W
+H*F(T, W);" }}{PARA 0 "" 0 "" {TEXT -1 12 "Compute T(I)" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 11 "T := A+I*H;" }}{PARA 0 "" 0 "" {TEXT -1 6 "ST
EP 4" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 37 "fprintf(OUP, `%5.3f %11.7f
\\n`, T, W);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "od;" }}{PARA 0 "" 0 
"" {TEXT -1 6 "STEP 5" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "if OUP <> \+
default then" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 12 "fclose(OUP):" }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 50 "printf(`Output file %s created suce
ssfully`,NAME);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 3 "fi;" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 10 "RETU
RN(0);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "end;" }}{PARA 12 "" 1 "" 
{XPPMATH 20 "6#>%'alg051G:6\"6/%\"FG%#OKG%\"AG%\"BG%&ALPHAG%\"NG%%FLAG
G%%NAMEG%$OUPG%\"HG%\"TG%\"WG%\"IGF&F&C/-%'printfG6#%9This~is~Euler's~
Method.|+G-F76#%OInput~the~function~F(t,y)~in~terms~of~t~and~y|+G-F76#
%5For~example:~y-t^2+1G>8$&-%&scanfG6#%#%aG6#\"\"\">FA-%(unapplyG6%FA%
\"tG%\"yG>8%%&FALSEG?(F&FHFHF&/FPFQC&-F76#%SInput~left~and~right~endpo
ints~separated~by~blank|+G>8&&-FD6#%#%fGFG>8'FZ@%1FinFY-F76#%PLeft~end
point~must~be~less~than~right~endpoint|+G>FP%%TRUEG-F76#%=Input~the~in
itial~condition|+G>8(FZ>FPFQ?(F&FHFHF&FSC%-F76#%YInput~a~positive~inte
ger~for~the~number~of~subintervals|+G>8)&-FD6#%#%dGFG@%1F]p\"\"!-F76#%
CNumber~must~be~a~positive~integer|+G>FPF`o@$/FPF`oC0-F76#%:Choice~of~
output~method:|+G-F76#%51.~Output~to~screen|+G-F76#%82.~Output~to~text
~file|+G-F76#%5Please~enter~1~or~2|+G>8*F^p@%/Fiq\"\"#C&-F76#%SInput~t
he~file~name~in~the~form~-~drive:\\name.ext|+G-F76#%=For~example~~~A:
\\OUTPUT.DTA|+G>8+&-FD6#%#%sGFG>8,-%&fopenG6%Fer%&WRITEG%%TEXTG>F[s%(d
efaultG-%(fprintfG6$F[s%0EULERS~METHOD|+|+G-Fds6$F[s%4~~~~t~~~~~~~~~~~
w|+|+G>8-*&,&FinFHFY!\"\"FHF]pF^t>8.FY>8/Feo-Fds6&F[s%.%5.3f~%11.7f|+G
F`tFbt?(80FHFHF]p%%trueGC%>Fbt,&FbtFH*&F[tFH-FA6$F`tFbtFHFH>F`t,&FYFH*
&FgtFHF[tFHFHFct@$0F[sFbsC$-%'fcloseG6#F[s-F76$%COutput~file~%s~create
d~sucessfullyGFer-%'RETURNG6#FdpF&F&" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 9 "alg051();" }}{PARA 6 "" 1 "" {TEXT -1 90 "This is Eule
r's Method.\nInput the function F(t,y) in terms of t and y\nFor exampl
e: y-t^2+1" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "y-t^2+1" }}
{PARA 6 "" 1 "" {TEXT -1 49 "Input left and right endpoints separated \+
by blank" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 3 "0 2" }}{PARA 6 "
" 1 "" {TEXT -1 27 "Input the initial condition" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 2 ".5" }}{PARA 6 "" 1 "" {TEXT -1 55 "Input a posi
tive integer for the number of subintervals" }}}{EXCHG {PARA 0 "> " 0 
"" {MPLTEXT 1 0 2 "10" }}{PARA 6 "" 1 "" {TEXT -1 87 "Choice of output
 method:\n1. Output to screen\n2. Output to text file\nPlease enter 1 \+
or 2" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 1 "1" }}{PARA 6 "" 1 "
" {TEXT -1 231 "EULERS METHOD\n\n    t           w\n\n0.000    .500000
0\n .200    .8000000\n .400   1.1520000\n .600   1.5504000\n .800   1.
9884800\n1.000   2.4581760\n1.200   2.9498112\n1.400   3.4517734\n1.60
0   3.9501281\n1.800   4.4281537\n2.000   4.8657845" }}{PARA 11 "" 1 "
" {XPPMATH 20 "6#\"\"!" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" 
}}}}{MARK "8 0 0" 0 }{VIEWOPTS 1 1 0 1 1 1803 }
