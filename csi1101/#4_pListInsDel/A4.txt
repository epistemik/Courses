CSI 1101                   ASSIGNMENT #4due date: 10:40 p.m., Wednesday, February 10, 1999issue date: Monday, February 1, 1999.You must do this assignment INDIVIDUALLY and follow all thegeneral instructions and programming standards for the coursesee the course home page for these).Marking Scheme 10 marks -- programming standards 20 marks -- question 1(a), recursive insert_at_end 25 marks -- question 1(b), recursive delete_all_occurrences 20 marks -- question 2(a), non-recursive insert_at_end 25 marks -- question 1(b), non-recursive delete_all_occurrences---------100 marks totalPROGRAM HANDOUT---------------In this assignment you are given PART of the final program and yourjob is to write the remaining parts of the program.  The program youare given is in file a4.pas in the course directory.Note that a4.pas is used as the starting point for question #1 andfor question #2 - you are to write the same procedures in bothquestions but in question #1 your procedures must be recursive andin question #2 they must not be recursive.Note that the "destroy" procedure in a4.pas is the model solution for aquestion on assignment #3 and therefore will not be given out until Thursday.You must use the given parts of the program without changing them.Be sure to change the comments at the beginning of the program and theinformation in procedure identify_myself to correctly identify yourself.You must use the given procedures get_node and return_node for all yourmemory management -- do not directly call Pascal's "new" or "dispose".WHAT TO HAND IN---------------Two programs (and their executables)  - a4q1.pas contains your answer for question #1  - a4q2.pas contains your answer for question #2 Question 1.-----------Your solutions for both parts of this question must be RECURSIVE,must contain no loops, and must not make unnecessary recursive calls.(a) Write a Pascal procedure          procedure insert_at_end( var L:list; V: element_type )that inserts V at the end of list L (if the given L is empty, thisprocedure changes it to be a singleton containing V).The model solution is about 5 lines of code.(b) Write a Pascal procedure          procedure delete_all_occurrences(var L:list; V: element_type)that deletes all occurrences of V in list L.Your procedure should work no matter how many occurrences of Vthere are (0, 1, several, or even if all the values in L equal V)and no matter where they are (there might be several in a row,there might be some at the beginning and some at the end andsome scattered elsewhere throughout of L,  etc.).The model solution is about 7 lines of code.Question 2.-----------Write non-recursive solutions for the procedures (a) insert_at_end and(b) delete_all_occurrences defined in question #1.Your solutions for this question must use loops, must not be recursive,and the only procedures they may call are get_node and return_node.The model solution for insert_at_end is about 8 lines of code.The model solution for delete_all_occurrences is about 12 lines of code.SUGGESTION ON HOW TO PROCEED----------------------------I suggest you do the questions in the order given - 1(a), 1(b), 2(a),and 2(b).Thoroughly test each one before proceeding to the next.Note that question 2(b) is more difficult than the others.SAMPLE OUTPUT-------------Here is an example of the output generated by a correctly working program.CSI 1101-X (winter,1999).  Assignment #4, Question #1Robert Holte, student# 0123456.tutorial section DGD-99, t.a. = kennyenter a list of reals, all values on one line1 2 3 4 3 2 1Here is the list you entered  1.0  2.0  3.0  4.0  3.0  2.0  1.0enter a value to be deleted (empty line to quit)4Here is the list after deleting all occurrences of    4.0  1.0  2.0  3.0  3.0  2.0  1.0enter a value to be deleted (empty line to quit)3Here is the list after deleting all occurrences of    3.0  1.0  2.0  2.0  1.0enter a value to be deleted (empty line to quit)1Here is the list after deleting all occurrences of    1.0  2.0  2.0enter a value to be deleted (empty line to quit)2Here is the list after deleting all occurrences of    2.0empty listenter a value to be deleted (empty line to quit)5Here is the list after deleting all occurrences of    5.0empty listenter a value to be deleted (empty line to quit)Amount of dynamic memory allocated but not returned (should be 0) 0Do you wish to continue (y or n) ?n