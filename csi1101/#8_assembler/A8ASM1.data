/file: a8asm1.dat//////*** Page 94 of the notes has a MACHINE LANGUAGE program  ***//*** with the corresponding ASSEMBLY LANGUAGE program in comments. ***////*** This file is the ASSEMBLY LANGUAGE program.       ***//*** It differs from what is shown on p.94             ***//*** in the variable names (and locations) used for    ***//*** Quotient (Quot), Remainder (Rem), and Temp.       ***//*** Also, the blanks in the single-digit labels ("[ 1]") ***//*** have been removed ("[1]") so that they are absolutely ***//*** identical to the way they appear as operands (this is ***//*** essential for the assembler you are writing to work). ***////This assembly language program divides one number X by another one, Y.//We assume that X and Y are both positive.////The general algorithm for dividing X by Y is to subtract Y from X until//X is smaller than Y.  The number of subtractions made is the quotient//and the final value in X is the remainder.////The following pseudocode exactly parallels the assembly language program.//Some of these pseudocode statements require more than 1 assembly language//instruction, so I have numbered the lines and will indicate the//correspondence using these line numbers.//// [1]  set Quot to zero// [2]  load X into the Accumulator// [3]  subtract Y from the Accumulator// [4]  if the Accumulator is negative, go to [7]// [5]  add 1 to Quot// [6]  go to [3]// [7]  add Y to the Accumulator (because we subtracted once too often)// [8]  store the Accumulator in Rem// [9]  display Quot// [10] display Rem// [11] Halt////Here is the assembly language program///[1]   CLA      STA Quot[2]   LDA X[3]   SUB Y[4]   JN  [7][5]   STA Temp      LDA Quot      INC      STA Quot      LDA Temp[6]   JMP [3][7]   ADD Y[8]   STA Rem[9]   DSP Quot[10]  DSP Rem[11]  HLTX     BYTE 25Y     BYTE 07Quot  BYTE 00Rem   BYTE 00Temp  BYTE 00