CSI 1101                   ASSIGNMENT #2due date: 10:40 p.m., Wednesday, January 27, 1999issue date: Monday, January 18, 1999.VERY IMPORTANT:    You must do this assignment INDIVIDUALLY and follow all the    general instructions and programming standards for the course   (see the course home page for these)Marking Scheme 10 marks -- programming standards 15 marks -- question 1, insert_at_front 20 marks -- question 1, insert_after_P 20 marks -- question 2  (pointer_to_Nth) 15 marks -- question 3  (delete_first) 20 marks -- question 4  (write_list)---------100 marks totalPROGRAM HANDOUT---------------In this assignment you are given PART of the final program and yourjob is to write the remaining parts of the program.  The program youare given is in file a2.pas in the course directory.  It is verysimilar to a1.pas, the main difference being the type definitionsfor "list" and "pointer".*** You MUST use the given parts of the program without changing them.    For example, you must not change the type declarations, the main    program, the assignment2 procedure, or the procedure headers for    the procedures you are asked to write.*** Be sure to change the comments at the beginning of the program and    the information in procedure identify_myself to correctly identify    yourself.In a2.pas you are given memory management procedures get_node and return_node.You must use these for all your memory management -- do not directlycall Pascal's "new" or "dispose".  get_node and return_node keep trackof how many nodes are currently allocated using a global variablememory_count.  This variable is printed by the main program; if it is notzero, your program has a memory leak (a serious bug).Question 1.-----------On assignment #1 you used BEFORE and AFTER diagrams to derivepseudocode algorithms for two operations - insert_at_front andinsert_after_P.  Then given type definitions for an array-basedimplementation of "list" you translated the pseudocode into Pascal.In a2.pas you will find type definitions for a pointer-basedimplementation of "list".  Write Pascal code for insert_at_front andinsert_after_P for these new type definitions.  The Pascal code foreach operation should exactly correspond to the pseudocode youdeveloped for the operation in assignment #1.Along with assignment #2 hand in the diagrams and pseudocodealgorithms you developed for these operations on assignment #1.Question 2.-----------Write the Pascal procedure pointer_to_Nth( L, N, P) which returnsin P a pointer to the Nth node in list L.  N is an integer; it isan error if N is less than 1  or greater than the size of L.*** for this assignment you do not have to test if N is greater*** than the size of L, you may assume it is not.(you wrote this procedure on assignment #1, the solution here willbe similar in most respects but will work with the pointer-basedtype definitions)Question 3.-----------Write the Pascal procedure delete_first( L ) which deletesthe first element in list L.  Your Pascal code should followas closely as possible the pseudocode algorithm for delete_firstdeveloped in class.Question 4.-----------Write the Pascal procedure write_list( L ) which writesout "empty list" is L is empty and otherwise writes outthe elements of L in order.SUGGESTION ON HOW TO PROCEED----------------------------I suggest you start by writing insert_at_front and write_list.When those are working perfectly write delete_first.When you have thoroughly tested those and are sure they areworking fine, write pointer_to_Nth.Once you are sure it is working, write insert_after_P.